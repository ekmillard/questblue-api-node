{
    "openapi": "3.1.0",
    "info": {
        "title": "QuestBlue API",
        "summary": "Restful API for managing telecommunications",
        "description": "",
        "version": "2.2.1"
    },
    "components": {
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            },
            "apiKeyAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "Security-Key"
            }
        }
    },
    "security": [
        {
            "basicAuth": [],
            "apiKeyAuth": []
        }
    ],
    "servers": [
        {
            "url": "https://api.questblue.com",
            "description": "Load balanced/High availability endpoints(Recommended)"
        },
        {
            "url": "https://api2.questblue.com",
            "description": "No load balancing single node endpoints(Not recommended for production use)"
        }
    ],
    "paths": {
        "/account/getbalance": {
            "get": {
                "tags": [
                    "User Account"
                ],
                "summary": "Get Account Balance and Allowed Credit",
                "description": "Retrieve the current account balance and allowed credit.",
                "operationId": "getAccountBalance",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the account balance and allowed credit.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "balance": {
                                                    "type": "string",
                                                    "description": "Current account balance."
                                                },
                                                "allowed_credit": {
                                                    "type": "string",
                                                    "description": "Allowed credit available."
                                                }
                                            },
                                            "required": [
                                                "balance",
                                                "allowed_credit"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account/setautorefill": {
            "put": {
                "tags": [
                    "User Account"
                ],
                "summary": "Enable or Disable Automatic Account Autorefill",
                "description": "Configure the automatic refill settings for the account.",
                "operationId": "setAutorefill",
                "parameters": [
                    {
                        "name": "autorefill",
                        "in": "query",
                        "description": "Enable or disable automatic account autorefill.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ],
                            "description": "Set to 'on' to enable autorefill or 'off' to disable it."
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty"
                    },
                    "206": {
                        "description": "Error updating autorefill settings.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message explaining why the request failed."
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account/setbalancereload": {
            "put": {
                "tags": [
                    "User Account"
                ],
                "summary": "Configure Minimum Account Balance and Autorefill Values",
                "description": "Set the minimum account balance and the amount for autorefill.",
                "operationId": "setBalanceReload",
                "parameters": [
                    {
                        "name": "min_balance",
                        "in": "query",
                        "description": "The minimum account balance threshold.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                5,
                                25,
                                30,
                                35,
                                40,
                                45,
                                50,
                                100,
                                150,
                                200,
                                250,
                                300,
                                350,
                                400,
                                500,
                                600,
                                700,
                                800,
                                900,
                                1000
                            ],
                            "description": "The minimum balance to set."
                        }
                    },
                    {
                        "name": "reload_amount",
                        "in": "query",
                        "description": "The amount to add to the account when autorefill is triggered.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                25,
                                50,
                                60,
                                70,
                                80,
                                90,
                                100,
                                200,
                                300,
                                400,
                                500,
                                1000,
                                1500,
                                2000,
                                2500
                            ],
                            "description": "The refill amount to set."
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty"
                    },
                    "206": {
                        "description": "Error updating balance and refill settings.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message explaining why the request failed."
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account/refillbalance": {
            "put": {
                "tags": [
                    "User Account"
                ],
                "summary": "Refill Account Balance",
                "description": "Reload the account balance with a specified amount.",
                "operationId": "refillBalance",
                "parameters": [
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "The amount to refill the balance. Minimum value is 10 USD.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 10,
                            "description": "The amount to add to the account balance."
                        }
                    },
                    {
                        "name": "Mode",
                        "in": "query",
                        "description": "Payment processing mode. This parameter is not in use anymore.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "cc",
                                "ach",
                                "all"
                            ],
                            "description": "The payment processing mode. Available values are 'cc' (charge credit card only), 'ach' (ACH payment), 'all' (credit card and ACH)."
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty"
                    },
                    "206": {
                        "description": "Error reloading the account balance.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message explaining why the request failed."
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account/rates": {
            "get": {
                "tags": [
                    "User Account"
                ],
                "summary": "List Service Rates",
                "description": "Retrieve the rates for various services.",
                "operationId": "getRates",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the service rates.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "local_did_cost": {
                                            "type": "string",
                                            "description": "Cost of a local DID."
                                        },
                                        "inbound_call_rate": {
                                            "type": "string",
                                            "description": "Rate for inbound calls."
                                        },
                                        "vps_server_rate": {
                                            "type": "string",
                                            "description": "Rate for VPS servers."
                                        },
                                        "ccrf": {
                                            "type": "string",
                                            "description": "CCRF rate."
                                        }
                                    },
                                    "required": [
                                        "local_did_cost",
                                        "inbound_call_rate",
                                        "vps_server_rate",
                                        "ccrf"
                                    ]
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error retrieving the service rates.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message explaining why the request failed."
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account/countrylist": {
            "get": {
                "tags": [
                    "User Account"
                ],
                "summary": "List of Available Countries for International Calls",
                "description": "Retrieve a list of countries available for international calls.",
                "operationId": "getAccountCountryList",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the list of countries.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "country_id": {
                                                        "type": "integer",
                                                        "description": "Unique identifier for the country."
                                                    },
                                                    "country_name": {
                                                        "type": "string",
                                                        "description": "Name of the country."
                                                    }
                                                },
                                                "required": [
                                                    "country_id",
                                                    "country_name"
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error retrieving the list of countries.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message explaining why the request failed."
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account/countryrate": {
            "get": {
                "tags": [
                    "User Account"
                ],
                "summary": "Retrieve International Call Rates by Country",
                "description": "Get the call rates for international destinations based on country ID.",
                "operationId": "getInternationalCallRates",
                "parameters": [
                    {
                        "name": "country_id",
                        "in": "query",
                        "description": "The unique identifier of the country for which the rate is requested.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the rates for the specified country.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "destination": {
                                                        "type": "string",
                                                        "description": "Name of the destination within the country."
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "description": "Country code for the destination."
                                                    },
                                                    "rate": {
                                                        "type": "string",
                                                        "description": "Rate for calling the destination."
                                                    }
                                                },
                                                "required": [
                                                    "destination",
                                                    "code",
                                                    "rate"
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error retrieving the rates.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message explaining why the request failed."
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account/ratezone2": {
            "get": {
                "tags": [
                    "User Account"
                ],
                "summary": "Retrieve International Call Rates for Zone 2",
                "description": "Get the call rates for international destinations classified under Zone 2.",
                "operationId": "getZone2Rates",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the rates for Zone 2.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "destination": {
                                                        "type": "string",
                                                        "description": "Name of the destination within Zone 2."
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "description": "Country or region code for the destination."
                                                    },
                                                    "rate": {
                                                        "type": "string",
                                                        "description": "Rate for calling the destination."
                                                    }
                                                },
                                                "required": [
                                                    "destination",
                                                    "code",
                                                    "rate"
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error retrieving the rates.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message explaining why the request failed."
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account/nonusintfrate": {
            "get": {
                "tags": [
                    "User Account"
                ],
                "summary": "Inbound Calls from Non US TF numbers",
                "description": "Get the call rates for international toll-free numbers outside the US.",
                "operationId": "getInternationalTollFreeRates",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the rates for Non-US International Toll-Free numbers.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "origin": {
                                                        "type": "string",
                                                        "description": "The origin or region of the toll-free number."
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "description": "Country or region code for the toll-free number."
                                                    },
                                                    "rate": {
                                                        "type": "string",
                                                        "description": "Rate for calling the toll-free number."
                                                    }
                                                },
                                                "required": [
                                                    "origin",
                                                    "code",
                                                    "rate"
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error retrieving the rates.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message explaining why the request failed."
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account/getaccoundetails": {
            "get": {
                "tags": [
                    "User Account"
                ],
                "summary": "Retrieve Account Properties",
                "description": "Get the properties of the user account including balance, minimum balance, reload amount, and notification settings.",
                "operationId": "getAccountDetails",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved account properties.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "balance": {
                                                        "type": "string",
                                                        "description": "Current account balance."
                                                    },
                                                    "minimum_balance": {
                                                        "type": "string",
                                                        "description": "Minimum balance required before triggering a refill."
                                                    },
                                                    "reload_amount": {
                                                        "type": "string",
                                                        "description": "Amount to refill when balance is low."
                                                    },
                                                    "payment_method": {
                                                        "type": "string",
                                                        "description": "Current payment method (e.g., 'cc' for credit card)."
                                                    },
                                                    "low_balance_alert_amount": {
                                                        "type": "string",
                                                        "description": "Amount at which low balance alerts are triggered."
                                                    },
                                                    "balance_autorefill": {
                                                        "type": "string",
                                                        "description": "Autorefill status (on/off)."
                                                    },
                                                    "balance_notify": {
                                                        "type": "string",
                                                        "description": "Notification status for balance (on/off)."
                                                    }
                                                },
                                                "required": [
                                                    "balance",
                                                    "minimum_balance",
                                                    "reload_amount",
                                                    "payment_method",
                                                    "low_balance_alert_amount",
                                                    "balance_autorefill",
                                                    "balance_notify"
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error retrieving account properties.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message explaining why the request failed."
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account/setlowbalancealert": {
            "put": {
                "tags": [
                    "User Account"
                ],
                "summary": "Manage Low Balance Alert",
                "description": "Set or cancel the low balance alert threshold. Notifications will be triggered when the account balance falls below this amount.",
                "operationId": "setLowBalanceAlert",
                "parameters": [
                    {
                        "name": "low_balance_alert_amount",
                        "in": "query",
                        "description": "Amount below which a low balance alert is triggered. Set to 0 to cancel the notification.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated low balance alert settings.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "description": "Empty response indicating success."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error updating low balance alert settings.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message explaining why the request failed."
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account/setdailybalancealert": {
            "put": {
                "tags": [
                    "User Account"
                ],
                "summary": "Manage Daily Balance Alert",
                "description": "Enable or disable daily balance alerts for the account.",
                "operationId": "setDailyBalanceAlert",
                "parameters": [
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Action to perform for daily balance alerts. Set to 'on' to enable or 'off' to disable.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ],
                            "example": "on"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated daily balance alert settings.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "description": "Empty response indicating success."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error updating daily balance alert settings.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message explaining why the request failed."
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account/callbackconfig": {
            "post": {
                "tags": [
                    "User Account"
                ],
                "summary": "Send message to specific URL on updating inventory",
                "description": "Configure a URL to receive messages on inventory updates. Setting an empty value will unset the post messages configuration.",
                "operationId": "callbackConfig",
                "parameters": [
                    {
                        "name": "url",
                        "in": "query",
                        "description": "URL to post messages to. Set to an empty value to unset the post messages.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "https://example.com/callback"
                        }
                    },
                    {
                        "name": "sections",
                        "in": "query",
                        "description": "Comma-separated list of sections to post messages on update. Set to an empty value to unset post messages.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lnp,did,fax,sms,trunk,server",
                            "enum": [
                                "lnp",
                                "did",
                                "fax",
                                "sms",
                                "trunk",
                                "server"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty"
                    },
                    "206": {
                        "description": "Error updating the post messages configuration.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message explaining why the request failed."
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account/callbackstatus": {
            "get": {
                "tags": [
                    "User Account"
                ],
                "summary": "Current configuration of message posting",
                "description": "Retrieve the current configuration for message posting to a specified URL.",
                "operationId": "callbackStatus",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the post messages configuration.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "type": "string",
                                                        "description": "The URL where messages are posted."
                                                    },
                                                    "sections": {
                                                        "type": "string",
                                                        "description": "Comma-separated list of sections for which messages are posted (e.g., 'lnp, did')."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error retrieving the post messages configuration.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message explaining why the request failed."
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/did": {
            "get": {
                "tags": [
                    "Voice DID Management"
                ],
                "summary": "List DIDs",
                "description": "List ordered DIDs and their configurations",
                "operationId": "listDids",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "DID to retrieve. Minimum 3 digits. Unix style searching(i.e. *890 123* *456*)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of records to list in a page. Default is 25",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 5,
                            "maximum": 200
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number to retrieve data from",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of DIDs and thier configurations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer"
                                        },
                                        "total_pages": {
                                            "type": "integer"
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Voice DID Management"
                ],
                "summary": "Order DID",
                "description": "Order a local or toll free DID",
                "operationId": "orderDID",
                "parameters": [
                    {
                        "name": "tier",
                        "in": "query",
                        "description": "DID tier",
                        "required": false,
                        "deprecated": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "0",
                                "1",
                                "1b",
                                "2"
                            ]
                        }
                    },
                    {
                        "name": "did",
                        "in": "query",
                        "description": "DID(s) to order",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": [
                                "integer",
                                "array"
                            ]
                        }
                    },
                    {
                        "name": "route2trunk",
                        "in": "query",
                        "description": "SIP Trunk to route the DID to. The trunk must be active.",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cnam",
                        "in": "query",
                        "description": "Enable CNAM Services",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    {
                        "name": "note",
                        "in": "query",
                        "description": "Add note/comment to DID up to 100 chars",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pin",
                        "in": "query",
                        "description": "Port out security PIN. 4-6 chars",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "lidb",
                        "in": "query",
                        "description": "Set CallerID name for the did. 4-15 chars alphanumeric",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "e911_name",
                        "in": "query",
                        "description": "Name of person or business registering for 911",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "e911_city",
                        "in": "query",
                        "description": "City of the registered 911 customer",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "e911_state",
                        "in": "query",
                        "description": "2 char state abbreviation",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "e911_zip",
                        "in": "query",
                        "description": "6 char zip code",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "e911_address",
                        "in": "query",
                        "description": "Street address of 911 customer",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "e911_unittype",
                        "in": "query",
                        "description": "Type of unit customer lives in(if any)",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "e911_unitnumber",
                        "in": "query",
                        "description": "Unit number or letter(if any)",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dlda",
                        "in": "query",
                        "description": "Turn directory listing on/off",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "yes",
                                "no"
                            ]
                        }
                    },
                    {
                        "name": "dlda_type",
                        "in": "query",
                        "description": "Directory listing type",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "business",
                                "residential"
                            ]
                        }
                    },
                    {
                        "name": "dlda_firstname",
                        "in": "query",
                        "description": "Business or person name depending on dlda_type",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dlda_lastname",
                        "in": "query",
                        "description": "Persons last name",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dlda_streetnum",
                        "in": "query",
                        "description": "Street number",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dlda_streetname",
                        "in": "query",
                        "description": "Street name",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dlda_city",
                        "in": "query",
                        "description": "City",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dlda_state",
                        "in": "query",
                        "description": "State",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dlda_zip",
                        "in": "query",
                        "description": "6 char zip code",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dlda_email",
                        "in": "query",
                        "description": "Contact email",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dlda_phone",
                        "in": "query",
                        "description": "Contact phone number",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Empty"
                    },
                    "202": {
                        "description": "Warning(Non critical error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "warning": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Voice DID Management"
                ],
                "summary": "Update DID",
                "description": "Update DID configuration",
                "operationId": "updateDID",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "DID to update",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "route2trunk",
                        "in": "query",
                        "description": "SIP Trunk to route the DID to. The trunk must be active.",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "forw2did",
                        "in": "query",
                        "description": "(Use trunk forwarding instead) Forward DID to this number.",
                        "required": false,
                        "deprecated": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "failover",
                        "in": "query",
                        "description": "Use trunk forwarding instead",
                        "required": false,
                        "deprecated": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "name": "cnam",
                        "in": "query",
                        "description": "Enable CNAM Services",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    {
                        "name": "note",
                        "in": "query",
                        "description": "Add note/comment to DID up to 100 chars",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pin",
                        "in": "query",
                        "description": "Port out security PIN. 4-6 chars",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "lidb",
                        "in": "query",
                        "description": "Set CallerID name for the did. 4-15 chars alphanumeric",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "e911_call_alert",
                        "in": "query",
                        "description": "Set email and phone to recieve 911 notifications",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "name": "e911_name",
                        "in": "query",
                        "description": "Name of person or business registering for 911",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "e911_city",
                        "in": "query",
                        "description": "City of the registered 911 customer",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "e911_state",
                        "in": "query",
                        "description": "2 char state abbreviation",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "e911_zip",
                        "in": "query",
                        "description": "6 char zip code",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "e911_address",
                        "in": "query",
                        "description": "Street address of 911 customer",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "e911_unittype",
                        "in": "query",
                        "description": "Type of unit customer lives in(if any)",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "e911_unitnumber",
                        "in": "query",
                        "description": "Unit number or letter(if any)",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dlda",
                        "in": "query",
                        "description": "Turn directory listing on/off",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "yes",
                                "no"
                            ]
                        }
                    },
                    {
                        "name": "dlda_type",
                        "in": "query",
                        "description": "Directory listing type",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "business",
                                "residential"
                            ]
                        }
                    },
                    {
                        "name": "dlda_firstname",
                        "in": "query",
                        "description": "Business or person name depending on dlda_type",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dlda_lastname",
                        "in": "query",
                        "description": "Persons last name",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dlda_streetnum",
                        "in": "query",
                        "description": "Street number",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dlda_streetname",
                        "in": "query",
                        "description": "Street name",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dlda_city",
                        "in": "query",
                        "description": "City",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dlda_state",
                        "in": "query",
                        "description": "State",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dlda_zip",
                        "in": "query",
                        "description": "6 char zip code",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dlda_email",
                        "in": "query",
                        "description": "Contact email",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dlda_phone",
                        "in": "query",
                        "description": "Contact phone number",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Empty"
                    },
                    "202": {
                        "description": "Warning(Non critical error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "warning": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Voice DID Management"
                ],
                "summary": "Delete DID",
                "description": "Completly remove DID from inventory",
                "operationId": "deleteDID",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "DID to remove",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Empty"
                    },
                    "206": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/did/states": {
            "get": {
                "tags": [
                    "Voice DID Management"
                ],
                "summary": "Get Available States List",
                "description": "List of states(short form) where at least one rate center is available.",
                "operationId": "getAvailableStates",
                "responses": {
                    "200": {
                        "description": "A list of states",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/did/ratecenters": {
            "get": {
                "tags": [
                    "Voice DID Management"
                ],
                "summary": "Get Available Rate Centers",
                "description": "List of rate centers for a state",
                "operationId": "getAvailableRatecenters",
                "parameters": [
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Two char state abbreviation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tier",
                        "in": "query",
                        "description": "DID Tier",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "0",
                                "1",
                                "1b",
                                "2"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of rate centers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/did/available": {
            "get": {
                "tags": [
                    "Voice DID Management"
                ],
                "summary": "Get Available DIDs",
                "description": "Get list of available DIDs - Local or Toll Free",
                "operationId": "getAvailableDIDs",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "DID type to list",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "local",
                                "tf"
                            ]
                        }
                    },
                    {
                        "name": "tier",
                        "in": "query",
                        "description": "DID Tier",
                        "required": false,
                        "deprecated": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "0",
                                "1",
                                "1b",
                                "2"
                            ]
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Two char state abbreviation. Required for Local DIDs if no NPA is set",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ratecenter",
                        "in": "query",
                        "description": "For Local DIDs only. Required for Local DIDs if no NPA is set",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "zip",
                        "in": "query",
                        "description": "Five character zip code. For Local DIDs only. Option overrides state/ratecenter/NPA",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Two char TF code.(Use Mask instead)",
                        "required": false,
                        "deprecated": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "mask",
                        "in": "query",
                        "description": "DID to retrieve by mask. Minimum 3 digits. Unix style searching(i.e. *890 123* *456*)",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "total_list",
                        "in": "query",
                        "description": "Limit the number of DIDs returned in the response. Default is 100.",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of DIDs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/did/move2fax": {
            "put": {
                "tags": [
                    "Voice DID Management"
                ],
                "summary": "Move to Fax",
                "description": "Move a number to fax inventory",
                "operationId": "moveToFax",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "DID to move",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Empty"
                    },
                    "206": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/did/fraudvalidate": {
            "post": {
                "tags": [
                    "Voice DID Management"
                ],
                "summary": "Scam Number Validation",
                "description": "Verify if phone number(s) are at risk of fraud",
                "operationId": "fraudValidate",
                "parameters": [
                    {
                        "name": "tn",
                        "in": "query",
                        "description": "Phone number(s) to validate",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": [
                                "integer",
                                "array"
                            ],
                            "maximum": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of numbers and thier risk levels",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/didinter/countrylist": {
            "get": {
                "tags": [
                    "International DID Management"
                ],
                "summary": "Get Available Countries List",
                "description": "List of countries where at least one rate center is available.",
                "operationId": "getInternationalCountriesList",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "DID to move",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of countries",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/didinter/citylist": {
            "get": {
                "tags": [
                    "International DID Management"
                ],
                "summary": "Get Available City List",
                "description": "List of cities where at least one rate center is available.",
                "operationId": "getInternationalCitiesList",
                "parameters": [
                    {
                        "name": "country_code",
                        "in": "query",
                        "description": "Two char Country Code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of cities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/didinter": {
            "get": {
                "tags": [
                    "International DID Management"
                ],
                "summary": "List DIDs",
                "description": "List ordered DIDs and their configurations",
                "operationId": "getInternationalDIDs",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "DID to retrieve. Minimum 3 digits. Unix style searching(i.e. *890 123* *456*)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of records to list in a page. Default is 25",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 5,
                            "maximum": 200
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number to retrieve data from",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of DIDs and thier configurations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer"
                                        },
                                        "total_pages": {
                                            "type": "integer"
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "International DID Management"
                ],
                "summary": "Order International DID",
                "description": "Order International DID",
                "operationId": "orderInternationalDID",
                "parameters": [
                    {
                        "name": "country_code",
                        "in": "query",
                        "description": "Two char Country Code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "City Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "forward2did",
                        "in": "query",
                        "description": "Local DID to forward inbound call",
                        "required": true,
                        "deprecated": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "route2trunk",
                        "in": "query",
                        "description": "SIP Trunk to route the DID to. The trunk must be active.",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of ordered DIDs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "did": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "International DID Management"
                ],
                "summary": "Update DID",
                "description": "Update International DID",
                "operationId": "updateInternationalDID",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "DID to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "forward2did",
                        "in": "query",
                        "description": "(Use route2trunk instead)Local DID to forward inbound call",
                        "required": true,
                        "deprecated": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "route2trunk",
                        "in": "query",
                        "description": "SIP Trunk to route the DID to. The trunk must be active.",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Empty",
                        "content": {}
                    },
                    "206": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "International DID Management"
                ],
                "summary": "Delete DID",
                "description": "Delete International DID",
                "operationId": "deleteInternationalDID",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "DID to remove",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Empty",
                        "content": {}
                    },
                    "206": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/siptrunk": {
            "get": {
                "tags": [
                    "SIP Trunk Management"
                ],
                "summary": "List SIP Trunks",
                "description": "List SIP Trunks and thier properties",
                "operationId": "getSiptrunks",
                "parameters": [
                    {
                        "name": "trunk",
                        "in": "query",
                        "description": "SIP Trunk name to get",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of records to list in a page. Default is 25",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 5,
                            "maximum": 200
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number to retrieve data from",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of SIP Trunks and thier properties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer"
                                        },
                                        "total_pages": {
                                            "type": "integer"
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "SIP Trunk Management"
                ],
                "summary": "Create SIP Trunk",
                "description": "Create a new static or registration SIP Trunk",
                "operationId": "createSiptrunk",
                "parameters": [
                    {
                        "name": "trunk",
                        "in": "query",
                        "description": "Alphanumeric trunk name. Maximum 30 chars",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Password for registration trunks. Alphanumeric 4-38 chars",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ip_address",
                        "in": "query",
                        "description": "Required for static trunks",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "description": "Region to create trunk in. Default is United States",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "us",
                                "us-ca",
                                "us-fl",
                                "us-il",
                                "us-ny",
                                "au",
                                "ca",
                                "fr",
                                "de",
                                "mx",
                                "pl",
                                "sg",
                                "uk"
                            ]
                        }
                    },
                    {
                        "name": "did",
                        "in": "query",
                        "description": "DID to route to trunk.",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "inter_call",
                        "in": "query",
                        "description": "Allow international calls",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    {
                        "name": "inter_limit",
                        "in": "query",
                        "description": "Limit daily cost for international calls",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 1000
                        }
                    },
                    {
                        "name": "tn2forward",
                        "in": "query",
                        "description": "US based DID to forward all inbound calls to",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "concurrent_max",
                        "in": "query",
                        "description": "Limit channels on the trunk",
                        "required": false,
                        "deprecated": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "allow_e164_rewrite",
                        "in": "query",
                        "description": "Allow E164 rewrite",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "yes",
                                "no"
                            ]
                        }
                    },
                    {
                        "name": "allow_rtp_proxy",
                        "in": "query",
                        "description": "If enabled we will proxy audio for this trunk",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "yes",
                                "no"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Empty",
                        "content": {}
                    },
                    "206": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "SIP Trunk Management"
                ],
                "summary": "Update SIP Trunk",
                "description": "Update SIP Trunk",
                "operationId": "updateSiptrunk",
                "parameters": [
                    {
                        "name": "trunk",
                        "in": "query",
                        "description": "Name of SIP Trunk to update",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Password for registration trunks. Alphanumeric 4-38 chars",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Enable or Disable(Lock) SIP Trunk",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    {
                        "name": "ip_address",
                        "in": "query",
                        "description": "Required for static trunks",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "description": "Region to create trunk in. Default is United States",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "us",
                                "us-ca",
                                "us-fl",
                                "us-il",
                                "us-ny",
                                "au",
                                "ca",
                                "fr",
                                "de",
                                "mx",
                                "pl",
                                "sg",
                                "uk"
                            ]
                        }
                    },
                    {
                        "name": "did",
                        "in": "query",
                        "description": "DID to route to trunk.",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "inter_call",
                        "in": "query",
                        "description": "Allow international calls",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    {
                        "name": "inter_limit",
                        "in": "query",
                        "description": "Limit daily cost for international calls",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 1000
                        }
                    },
                    {
                        "name": "tn2forward",
                        "in": "query",
                        "description": "US based DID to forward all inbound calls to",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "concurrent_max",
                        "in": "query",
                        "description": "Limit channels on the trunk",
                        "required": false,
                        "deprecated": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "allow_e164_rewrite",
                        "in": "query",
                        "description": "Allow E164 rewrite",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "yes",
                                "no"
                            ]
                        }
                    },
                    {
                        "name": "allow_rtp_proxy",
                        "in": "query",
                        "description": "If enabled we will proxy audio for this trunk",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "yes",
                                "no"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Empty",
                        "content": {}
                    },
                    "206": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "SIP Trunk Management"
                ],
                "summary": "Delete SIP Trunk",
                "description": "Completely remove SIP Trunk",
                "operationId": "deleteSiptrunk",
                "parameters": [
                    {
                        "name": "trunk",
                        "in": "query",
                        "description": "Trunk to remove",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Empty",
                        "content": {}
                    },
                    "206": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/siptrunk/statuschecker": {
            "get": {
                "tags": [
                    "SIP Trunk Management"
                ],
                "summary": "Registration Status Check",
                "description": "Get registration status of SIP Trunk",
                "operationId": "checkSiptrunkRegistrationStatus",
                "parameters": [
                    {
                        "name": "trunk",
                        "in": "query",
                        "description": "SIP Trunk name to check",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of SIP Trunks and thier properties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer"
                                        },
                                        "res": {
                                            "type": "string",
                                            "enum": [
                                                "online",
                                                "offline",
                                                "error"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/siptrunk/blockcaller": {
            "post": {
                "tags": [
                    "SIP Trunk Management"
                ],
                "summary": "Block or Unblock Inbound Callers to Specific Trunk(s)",
                "description": "Block or unblock inbound calls to a specified SIP trunk or array of trunks.",
                "operationId": "blockCaller",
                "parameters": [
                    {
                        "name": "trunk",
                        "in": "query",
                        "description": "SIP Trunk(s) to disallow inbound calls. This must be an active trunk from your account.",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string",
                            "description": "Can be a single string or an array of trunks."
                        }
                    },
                    {
                        "name": "did",
                        "in": "query",
                        "description": "Ten characters TN to block.",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "integer",
                            "description": "The DID number to block or unblock."
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Action to perform. Values can be 'block' or 'unblock'.",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "block",
                                "unblock"
                            ],
                            "description": "The action to perform: either 'block' or 'unblock'."
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Empty response body for a successful request.",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Warning (Non-Critical Error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "warning": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "Warning message(s) returned by the API."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message returned by the API."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/siptrunk/blockedcallers": {
            "get": {
                "tags": [
                    "SIP Trunk Management"
                ],
                "summary": "List Blocked Callers",
                "description": "Retrieve a list of callers blocked on specific SIP trunk(s).",
                "operationId": "getBlockedCallers",
                "parameters": [
                    {
                        "name": "trunk",
                        "in": "query",
                        "description": "SIP Trunk(s) to list blocked callers. This must be an active trunk from your account.",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string",
                            "description": "Can be a single string or an array of trunks."
                        }
                    },
                    {
                        "name": "did",
                        "in": "query",
                        "description": "List only specific blocked TN (telephone number).",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "integer",
                            "description": "The specific DID number to filter the blocked callers list."
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of records to list on a page. The default value is 25. Set a value in the range of 5 to 200 if needed.",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "minimum": 5,
                            "maximum": 200
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number to retrieve data from.",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "integer",
                            "description": "The page number to retrieve."
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of blocked callers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of blocked callers."
                                        },
                                        "total_pages": {
                                            "type": "integer",
                                            "description": "Total number of pages available."
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "description": "The current page number."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "did": {
                                                        "type": "string",
                                                        "description": "The blocked DID (telephone number)."
                                                    },
                                                    "trunk": {
                                                        "type": "string",
                                                        "description": "The name of the SIP trunk associated with the blocked caller."
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "description": "The status of the blocked caller."
                                                    },
                                                    "ip_address": {
                                                        "type": "string",
                                                        "description": "The IP address associated with the blocked caller."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sms": {
            "get": {
                "tags": [
                    "SMS Service"
                ],
                "summary": "List SMS Supported DIDs and Properties",
                "description": "Retrieve a list of DIDs that support SMS along with their SMS properties. This method also works for SMS v2.",
                "operationId": "getSMSSupportedDIDs",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "DID to retrieve information. Supports Unix-style DID searching (e.g., *890, 123*, *456*). The search pattern requires at least three digits, otherwise, it will be ignored.",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "string",
                            "description": "Can be a full DID or a Unix-style pattern."
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of records to list on a page. The default value is 25. Set a value in the range of 5 to 200 if needed.",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "minimum": 5,
                            "maximum": 200
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number to retrieve data from.",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "integer",
                            "description": "The page number to retrieve."
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of SMS supported DIDs and their properties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of SMS supported DIDs."
                                        },
                                        "total_pages": {
                                            "type": "integer",
                                            "description": "Total number of pages available."
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "description": "The current page number."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "did": {
                                                        "type": "string",
                                                        "description": "The DID number."
                                                    },
                                                    "sms_enabled": {
                                                        "type": "string",
                                                        "description": "Status of SMS on the DID (e.g., 'on' or 'off')."
                                                    },
                                                    "sms_mode": {
                                                        "type": "string",
                                                        "description": "The mode in which SMS is being handled (e.g., 'Email and XMPP')."
                                                    },
                                                    "email2forward": {
                                                        "type": "string",
                                                        "description": "The email address to which SMS messages are forwarded."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "SMS Service"
                ],
                "summary": "Update SMS Settings",
                "description": "Update SMS settings for a specific DID. Various SMS modes are supported including forwarding to email, XMPP, posting to a URL, and disabling SMS.",
                "operationId": "updateSMSSettings",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "The DID to manage SMS settings for.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The DID number."
                        }
                    },
                    {
                        "name": "sms_mode",
                        "in": "query",
                        "description": "Set the mode for handling inbound SMS. Possible values: 'email', 'xmpp', 'both', 'url', 'chat', 'none', '3cx'.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "email",
                                "xmpp",
                                "both",
                                "url",
                                "chat",
                                "none",
                                "3cx"
                            ],
                            "description": "The mode in which SMS will be handled."
                        }
                    },
                    {
                        "name": "forward2email",
                        "in": "query",
                        "description": "The email address to forward inbound SMS messages to. Required if 'sms_mode' is set to 'email' or 'both'.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "email",
                            "description": "The email address for forwarding."
                        }
                    },
                    {
                        "name": "xmpp_name",
                        "in": "query",
                        "description": "The XMPP username. Required if 'sms_mode' is set to 'xmpp' or 'both'.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "XMPP username."
                        }
                    },
                    {
                        "name": "xmpp_passwd",
                        "in": "query",
                        "description": "The XMPP password. Required if 'sms_mode' is set to 'xmpp' or 'both'.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "XMPP password."
                        }
                    },
                    {
                        "name": "post2url",
                        "in": "query",
                        "description": "The URL to which SMS will be posted if 'sms_mode' is set to 'url'. The following variables will be sent: 'from', 'to', 'msg'.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "url",
                            "description": "The URL for posting SMS data."
                        }
                    },
                    {
                        "name": "post2urlmethod",
                        "in": "query",
                        "description": "The method used to post data to the URL. Possible values: 'form' (default), 'json', 'xml'.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "form",
                                "json",
                                "xml"
                            ],
                            "default": "form",
                            "description": "The method for posting data."
                        }
                    },
                    {
                        "name": "chat_email",
                        "in": "query",
                        "description": "A valid email address required if 'sms_mode' is set to 'chat'.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "email",
                            "description": "The email address for chat mode."
                        }
                    },
                    {
                        "name": "chat_passwd",
                        "in": "query",
                        "description": "Password to log in to Wetext.pro. Required if 'sms_mode' is set to 'chat'.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "The password for chat mode."
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SMS settings updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "description": "Indicates whether the SMS settings were updated successfully."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A message indicating the outcome of the request."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid or missing parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "An error message describing the issue."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/smsv2": {
            "post": {
                "tags": [
                    "SMS Service"
                ],
                "summary": "Send SMS or MMS Message",
                "description": "Send an SMS or MMS message to a US-based telephone number. If a file is attached, the message will be sent as an MMS.",
                "operationId": "sendMessage",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "The DID (phone number) from which the message will be sent. Must be an active, SMS-enabled DID.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The sender's DID."
                        }
                    },
                    {
                        "name": "did_to",
                        "in": "query",
                        "description": "The US-based DID to which the message will be sent.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The recipient's DID."
                        }
                    },
                    {
                        "name": "msg",
                        "in": "query",
                        "description": "The text message to send. Required if no file is selected.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "The SMS message content."
                        }
                    },
                    {
                        "name": "file_url",
                        "in": "query",
                        "description": "Array of publicly accessible media urls",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message sent successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "msg_id": {
                                                        "type": "string",
                                                        "description": "The ID of the sent message."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error occurred while sending the message.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "An error message describing the issue."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sms/offnetorder": {
            "post": {
                "tags": [
                    "SMS Service"
                ],
                "summary": "Manage Offnet SMS Service Order",
                "description": "Create or cancel an Offnet SMS service order for a non-tier 1b DID.",
                "operationId": "updateOffnetSMS",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "The non-tier 1b DID for which to manage the Offnet SMS service.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The DID for Offnet SMS management."
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "The action to perform on the Offnet SMS service. Possible values: 'add' to create a new service request, 'remove' to cancel the service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "add",
                                "remove"
                            ],
                            "description": "The action to perform ('add' or 'remove')."
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Offnet SMS service order managed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "An empty object is returned on success."
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error occurred while managing the Offnet SMS service order.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "An error message describing the issue."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sms/offnetstatus": {
            "get": {
                "tags": [
                    "SMS Service"
                ],
                "summary": "Retrieve Offnet SMS Service Order Status",
                "description": "Get the status of an Offnet SMS service order for a specific DID.",
                "operationId": "getOffnetOrderStatus",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "The DID for which to retrieve the Offnet SMS service status.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The DID to check the Offnet SMS service status."
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The current status of the Offnet SMS service order.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "description": "The status of the Offnet SMS service order.",
                                                    "enum": [
                                                        "unavailable",
                                                        "disabled",
                                                        "received",
                                                        "processing",
                                                        "failed",
                                                        "enabled"
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error occurred while retrieving the Offnet SMS service order status.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "An error message describing the issue."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sms/": {
            "get": {
                "tags": [
                    "SMS Service"
                ],
                "summary": "Retrieve SMS History",
                "description": "Retrieve SMS records for a customer account, filtered by additional options.",
                "operationId": "getSMSRecords",
                "parameters": [
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Date options to filter SMS records.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "thishour",
                                "previoushour",
                                "today",
                                "yesterday",
                                "array[startDate, endDate]"
                            ]
                        }
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "Specify SMS direction.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "in",
                                "out",
                                ""
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort retrieving data in either ascending or descending order.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "msg_type",
                        "in": "query",
                        "description": "Retrieve specific message type.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "sms",
                                "mms",
                                ""
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of records to list per page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "minimum": 5,
                            "maximum": 500
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of SMS records.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of SMS records."
                                        },
                                        "total_pages": {
                                            "type": "integer",
                                            "description": "Total number of pages."
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "description": "Current page number."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "description": "Unique identifier for the SMS record."
                                                    },
                                                    "time": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "description": "Timestamp of the SMS record in ISO 8601 format."
                                                    },
                                                    "from": {
                                                        "type": "string",
                                                        "description": "The phone number from which the SMS was sent."
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "The phone number to which the SMS was sent."
                                                    },
                                                    "direction": {
                                                        "type": "string",
                                                        "description": "Direction of the SMS (inbound or outbound)."
                                                    },
                                                    "msg_type": {
                                                        "type": "string",
                                                        "description": "Type of the message (sms or mms)."
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "description": "Status of the SMS."
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "time",
                                                    "from",
                                                    "to",
                                                    "direction",
                                                    "msg_type",
                                                    "status"
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "total",
                                        "total_pages",
                                        "current_page",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error occurred while retrieving SMS history.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "An error message describing the issue."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sms/deliverystatus": {
            "get": {
                "tags": [
                    "SMS Service"
                ],
                "summary": "Retrieve Message Delivery Status",
                "description": "Check the delivery status of a previously sent message using its message ID.",
                "operationId": "getMessageDeliveryStatus",
                "parameters": [
                    {
                        "name": "msg_id",
                        "in": "query",
                        "description": "The ID of the sent message for which to check the delivery status.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The delivery status of the message. The response body will include the status.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "description": "The delivery status of the message. Possible values include 'sent', 'delivered', 'failed', etc."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred while retrieving the message delivery status.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "An error message describing the issue."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/smschecktncarrier": {
            "get": {
                "tags": [
                    "SMS Service"
                ],
                "summary": "Check TN Carrier Wires",
                "description": "Retrieve information about the carrier associated with a given telephone number (TN), including whether it is a wireless number.",
                "operationId": "checkDIDCarrier",
                "parameters": [
                    {
                        "name": "tn",
                        "in": "query",
                        "description": "The telephone number(s) (TN) to check. Can be a single number or an array of numbers.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Carrier information for the provided TN(s).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "description": "The total number of TNs found."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tn": {
                                                        "type": "integer",
                                                        "description": "The telephone number (TN) checked."
                                                    },
                                                    "carrier": {
                                                        "type": "string",
                                                        "description": "The name of the carrier associated with the TN."
                                                    },
                                                    "isWireless": {
                                                        "type": "string",
                                                        "description": "Indicates whether the TN is wireless. Possible values are 'yes' or 'no'."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred while checking the TN carrier.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "An error message describing the issue."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dlc/brand": {
            "get": {
                "tags": [
                    "DLC Service"
                ],
                "summary": "List Active 10 DLC SMS Brands",
                "description": "Retrieve a list of active 10 DLC (Dedicated Long Code) SMS Brands. Optionally, filter the list by specific Brand IDs.",
                "operationId": "getBrandsList",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Optional Brand ID(s) to filter the list by specific brand(s). Can be a single ID or an array of IDs.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of active DLC brands is returned. The response includes pagination details and the details of each brand.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "description": "The total number of DLC brands found."
                                        },
                                        "total_pages": {
                                            "type": "integer",
                                            "description": "The total number of pages available for the result set."
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "description": "The current page number of the result set."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "description": "The unique identifier for the DLC brand."
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "description": "The approval status of the DLC brand. Example: 'Approved'."
                                                    },
                                                    "company_name": {
                                                        "type": "string",
                                                        "description": "The name of the company associated with the DLC brand."
                                                    },
                                                    "legal_type": {
                                                        "type": "string",
                                                        "description": "The legal structure of the company. Example: 'Private Company'."
                                                    },
                                                    "vertical_type": {
                                                        "type": "string",
                                                        "description": "The industry vertical of the company. Example: 'Insurance'."
                                                    },
                                                    "tax_number": {
                                                        "type": "string",
                                                        "description": "The tax number of the company."
                                                    },
                                                    "lei_number_type": {
                                                        "type": "string",
                                                        "description": "The type of legal entity identifier. Example: 'GIIN'."
                                                    },
                                                    "lei_number": {
                                                        "type": "string",
                                                        "description": "The legal entity identifier number of the company."
                                                    },
                                                    "contact": {
                                                        "type": "string",
                                                        "description": "The contact information for the company."
                                                    },
                                                    "address": {
                                                        "type": "string",
                                                        "description": "The address of the company."
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "description": "The website URL of the company."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred while listing the DLC brands.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "An error message describing the issue."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "DLC Service"
                ],
                "summary": "Add New 10 DLC SMS Brand",
                "description": "Create a new 10 DLC (Dedicated Long Code) SMS Brand by providing company information and other required details.",
                "operationId": "createBrand",
                "parameters": [
                    {
                        "name": "company_name",
                        "in": "query",
                        "description": "The name of the company.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "legal_type",
                        "in": "query",
                        "description": "The legal structure of the organization. Possible values include: 1 for Publicly Traded Company, 2 for Private Company, 3 for Non-Profit Organization, 4 for Government.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "vertical_type",
                        "in": "query",
                        "description": "The industry vertical of the organization. Refer to the provided list for possible values (e.g., 1 for Agriculture, 2 for Media and Communications, etc.).",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "tax_number",
                        "in": "query",
                        "description": "The tax number of the organization.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lei_number_type",
                        "in": "query",
                        "description": "The type of legal entity identifier. Possible values include: duns, giin, lei. This is required if a legal entity identifier number (lei_number) is provided.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lei_number",
                        "in": "query",
                        "description": "The legal entity identifier number of the organization.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contact",
                        "in": "query",
                        "description": "The contact information for the organization.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "The address of the organization.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "description": "The website URL of the organization.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The DLC brand was successfully added.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "description": "The total number of brands added."
                                        },
                                        "total_pages": {
                                            "type": "integer",
                                            "description": "The total number of pages of results."
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "description": "The current page number in the paginated results."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "description": "The ID of the newly created DLC brand."
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "description": "The approval status of the brand. Possible values include 'Approved', 'Pending', etc."
                                                    },
                                                    "company_name": {
                                                        "type": "string",
                                                        "description": "The name of the company."
                                                    },
                                                    "legal_type": {
                                                        "type": "string",
                                                        "description": "The legal structure of the organization, e.g., 'Publicly Traded Company', 'Private Company', etc."
                                                    },
                                                    "vertical_type": {
                                                        "type": "string",
                                                        "description": "The industry vertical of the organization, e.g., 'Insurance', 'Real Estate', etc."
                                                    },
                                                    "tax_number": {
                                                        "type": "string",
                                                        "description": "The tax number of the organization."
                                                    },
                                                    "lei_number_type": {
                                                        "type": "string",
                                                        "description": "The type of legal entity identifier, e.g., 'GIIN', 'DUNS', etc."
                                                    },
                                                    "lei_number": {
                                                        "type": "string",
                                                        "description": "The legal entity identifier number of the organization."
                                                    },
                                                    "contact": {
                                                        "type": "string",
                                                        "description": "The contact information for the organization."
                                                    },
                                                    "address": {
                                                        "type": "string",
                                                        "description": "The address of the organization."
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "description": "The website URL of the organization."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred while adding the DLC brand.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "An error message describing the issue."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "DLC Service"
                ],
                "summary": "Update 10 DLC SMS Brand",
                "description": "Update the details of an existing 10 DLC (Dedicated Long Code) SMS Brand by providing the brand ID and the parameters that need to be updated.",
                "operationId": "updateBrand",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The ID of the DLC brand that needs to be updated.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "company_name",
                        "in": "query",
                        "description": "The name of the company.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "legal_type",
                        "in": "query",
                        "description": "The legal structure of the organization. Possible values include: 1 for Publicly Traded Company, 2 for Private Company, 3 for Non-Profit Organization, 4 for Government.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "vertical_type",
                        "in": "query",
                        "description": "The industry vertical of the organization. Refer to the provided list for possible values (e.g., 1 for Agriculture, 2 for Media and Communications, etc.).",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "tax_number",
                        "in": "query",
                        "description": "The tax number of the organization.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lei_number_type",
                        "in": "query",
                        "description": "The type of legal entity identifier. Possible values include: duns, giin, lei. This is required if a legal entity identifier number (lei_number) is provided.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lei_number",
                        "in": "query",
                        "description": "The legal entity identifier number of the organization.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contact",
                        "in": "query",
                        "description": "The contact information for the organization.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "The address of the organization.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "description": "The website URL of the organization.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The DLC brand was successfully updated. The response body is empty.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "description": "Empty response body on success."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred while updating the DLC brand.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "An error message describing the issue."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "DLC Service"
                ],
                "summary": "Remove 10 DLC SMS Brand",
                "description": "Delete a specific 10 DLC (Dedicated Long Code) SMS Brand using its Brand ID.",
                "operationId": "deleteBrand",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The unique identifier (Brand ID) of the DLC brand to be removed.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The DLC brand was successfully removed. The response body is empty.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "The DLC brand was removed with a warning. The response includes a warning message.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "warning": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "A non-critical warning message related to the removal of the DLC brand."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred while attempting to remove the DLC brand.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "An error message describing the issue."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dlc/campaign": {
            "post": {
                "tags": [
                    "DLC Service"
                ],
                "summary": "Add New 10 DLC SMS Campaign",
                "description": "Create a new 10 DLC (Dedicated Long Code) SMS campaign under an existing active brand.",
                "operationId": "createCampaign",
                "parameters": [
                    {
                        "name": "brand_id",
                        "in": "query",
                        "description": "The ID of the active brand for which to create the campaign.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "campaign_type",
                        "in": "query",
                        "description": "The type of campaign to create. Possible values are 'standard' or 'special'.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "standard",
                                "special"
                            ]
                        }
                    },
                    {
                        "name": "campaign_type_standard",
                        "in": "query",
                        "description": "The type of standard campaign. Required if campaign_type is set to 'standard'.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12
                            ],
                            "description": [
                                "1 - 2FA",
                                "2 - Account Notification",
                                "3 - Customer Care",
                                "4 - Delivery Notification",
                                "5 - Fraud Alert Messaging",
                                "6 - Higher Education",
                                "7 - Low Volume Mixed",
                                "8 - Marketing",
                                "9 - Mixed",
                                "10 - Polling and Voting",
                                "11 - Public Service Announcement",
                                "12 - Security Alert"
                            ]
                        }
                    },
                    {
                        "name": "campaign_type_special",
                        "in": "query",
                        "description": "The type of special campaign. Required if campaign_type is set to 'special'.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10
                            ],
                            "description": [
                                "1 - Agents and Franchises",
                                "2 - Carrier Exemptions",
                                "3 - Charity",
                                "4 - Emergency",
                                "5 - K-12 Education",
                                "6 - Political",
                                "7 - Proxy",
                                "8 - Social",
                                "9 - Sole Proprietor",
                                "10 - Sweepstake"
                            ]
                        }
                    },
                    {
                        "name": "company_name",
                        "in": "query",
                        "description": "The name of the company for the campaign.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vertical_type",
                        "in": "query",
                        "description": "The industry vertical for the campaign. Refer to the list in the Add DLC Brand section.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "campaign_description",
                        "in": "query",
                        "description": "A description of the campaign.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sample_message",
                        "in": "query",
                        "description": "A sample message that will be used in the campaign.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "consumer_opt_ins",
                        "in": "query",
                        "description": "How consumer opt-ins are collected and processed.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "consumer_opt_outs",
                        "in": "query",
                        "description": "How consumer opt-outs are collected and processed.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reply_help",
                        "in": "query",
                        "description": "Indicates whether the campaign has implemented a 'HELP' keyword response. Must be set to 'yes'.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "yes"
                            ]
                        }
                    },
                    {
                        "name": "campaign_did",
                        "in": "query",
                        "description": "The DID(s) that will be used for this campaign. Separate multiple DIDs with commas or spaces.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "loan_arrange",
                        "in": "query",
                        "description": "Indicates whether the campaign includes content related to direct lending or loan arrangements.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "yes",
                                "no"
                            ]
                        }
                    },
                    {
                        "name": "embedded_link",
                        "in": "query",
                        "description": "Indicates whether the campaign uses any embedded links.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "yes",
                                "no"
                            ]
                        }
                    },
                    {
                        "name": "embedded_phone",
                        "in": "query",
                        "description": "Indicates whether the campaign uses any embedded phone numbers.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "yes",
                                "no"
                            ]
                        }
                    },
                    {
                        "name": "marketing_used",
                        "in": "query",
                        "description": "Indicates whether affiliate marketing is used or was used in constructing this campaign.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "yes",
                                "no"
                            ]
                        }
                    },
                    {
                        "name": "age_gated_contact",
                        "in": "query",
                        "description": "Indicates whether the campaign includes any age-gated content as defined by CTIA guidelines.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "yes",
                                "no"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The DLC campaign was successfully created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "description": "The ID of the newly created DLC campaign."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred while attempting to create the DLC campaign.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "An error message describing the issue."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "DLC Service"
                ],
                "summary": "List Active 10 DLC SMS Campaigns",
                "description": "Retrieve a list of active 10 DLC SMS campaigns associated with specific brand IDs or all active campaigns.",
                "operationId": "getCampaigns",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Brand ID(s) to filter campaigns. Can be a single ID or an array of IDs. If omitted, all active campaigns are returned.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of active 10 DLC SMS campaigns, including their details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "description": "The total number of campaigns found."
                                        },
                                        "total_pages": {
                                            "type": "integer",
                                            "description": "The total number of pages for the campaigns."
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "description": "The current page of the campaign list."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "description": "The ID of the campaign."
                                                    },
                                                    "brand_id": {
                                                        "type": "string",
                                                        "description": "The ID of the associated brand."
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "description": "The status of the campaign (e.g., Submitted, Approved)."
                                                    },
                                                    "campaign_type": {
                                                        "type": "string",
                                                        "description": "The type of the campaign (e.g., standard, special)."
                                                    },
                                                    "campaign_type_standard": {
                                                        "type": "string",
                                                        "description": "The specific type of standard campaign (e.g., Public Service)."
                                                    },
                                                    "vertical_type": {
                                                        "type": "string",
                                                        "description": "The industry vertical of the campaign (e.g., Transportation or Logistics)."
                                                    },
                                                    "campaign_description": {
                                                        "type": "string",
                                                        "description": "A description of the campaign."
                                                    },
                                                    "sample_message": {
                                                        "type": "string",
                                                        "description": "A sample message used in the campaign."
                                                    },
                                                    "consumer_opt_ins": {
                                                        "type": "string",
                                                        "description": "How consumer opt-ins are collected and processed."
                                                    },
                                                    "consumer_opt_outs": {
                                                        "type": "string",
                                                        "description": "How consumer opt-outs are collected and processed."
                                                    },
                                                    "reply_help": {
                                                        "type": "string",
                                                        "description": "Indicates whether the 'HELP' keyword response is implemented. Value is 'yes'."
                                                    },
                                                    "campaign_did": {
                                                        "type": "string",
                                                        "description": "The DID(s) used for this campaign, separated by commas."
                                                    },
                                                    "loan_arrange": {
                                                        "type": "string",
                                                        "description": "Indicates if the campaign includes content related to direct lending or loan arrangements. Values are 'yes' or 'no'."
                                                    },
                                                    "embedded_link": {
                                                        "type": "string",
                                                        "description": "Indicates if the campaign uses any embedded links. Values are 'yes' or 'no'."
                                                    },
                                                    "embedded_phone": {
                                                        "type": "string",
                                                        "description": "Indicates if the campaign uses any embedded phone numbers. Values are 'yes' or 'no'."
                                                    },
                                                    "marketing_used": {
                                                        "type": "string",
                                                        "description": "Indicates if affiliate marketing was used in constructing this campaign. Values are 'yes' or 'no'."
                                                    },
                                                    "age_gated_contact": {
                                                        "type": "string",
                                                        "description": "Indicates if the campaign includes any age-gated content as defined by CTIA guidelines. Values are 'yes' or 'no'."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred while retrieving the campaign list.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "An error message describing the issue."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "DLC Service"
                ],
                "summary": "Update 10 DLC SMS Campaign",
                "description": "Update the details of an existing 10 DLC SMS campaign using its campaign ID.",
                "operationId": "updateCampaign",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The ID of the campaign to update.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "brand_id",
                        "in": "query",
                        "description": "Active Brand ID to create the campaign.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "campaign_type",
                        "in": "query",
                        "description": "Type of the campaign. Values: standard, special.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "campaign_type_standard",
                        "in": "query",
                        "description": "Specific type of the standard campaign. Required if 'campaign_type' is set to 'standard'.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12
                            ],
                            "description": "Values and descriptions are the same as in #4.4.12."
                        }
                    },
                    {
                        "name": "campaign_type_special",
                        "in": "query",
                        "description": "Specific type of the special campaign. Required if 'campaign_type' is set to 'special'.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10
                            ],
                            "description": "Values and descriptions are the same as in #4.4.12."
                        }
                    },
                    {
                        "name": "company_name",
                        "in": "query",
                        "description": "The name of the company.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vertical_type",
                        "in": "query",
                        "description": "The industry vertical associated with the campaign. See #4.4.8 (Add DLC Brand).",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "campaign_description",
                        "in": "query",
                        "description": "A description of the campaign.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sample_message",
                        "in": "query",
                        "description": "A sample message used in the campaign.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "consumer_opt_ins",
                        "in": "query",
                        "description": "Information on how consumer opt-ins are collected and processed.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "consumer_opt_outs",
                        "in": "query",
                        "description": "Information on how consumer opt-outs are collected and processed.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reply_help",
                        "in": "query",
                        "description": "Indicates whether the 'HELP' keyword response is implemented. Value must be 'yes'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "campaign_did",
                        "in": "query",
                        "description": "The DID(s) used for this campaign. List of active DIDs in your account separated by commas or spaces.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "loan_arrange",
                        "in": "query",
                        "description": "Indicates if the campaign includes content related to direct lending or loan arrangements. Values: yes, no.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "embedded_link",
                        "in": "query",
                        "description": "Indicates if the campaign uses any embedded links. Values: yes, no.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "embedded_phone",
                        "in": "query",
                        "description": "Indicates if the campaign uses any embedded phone numbers. Values: yes, no.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "marketing_used",
                        "in": "query",
                        "description": "Indicates if affiliate marketing was used in constructing this campaign. Values: yes, no.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "age_gated_contact",
                        "in": "query",
                        "description": "Indicates if the campaign includes any age-gated content as defined by CTIA guidelines. Values: yes, no.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The campaign was successfully updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred while updating the campaign.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "An error message describing the issue."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "DLC Service"
                ],
                "summary": "Remove 10 DLC SMS Campaign",
                "description": "Delete an existing 10 DLC SMS campaign using its campaign ID.",
                "operationId": "deleteCampaign",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The ID of the campaign to remove.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The campaign was successfully removed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "The campaign was removed, but there is a non-critical warning.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "warning": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "Warning messages regarding the removal."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred while removing the campaign.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "An error message describing the issue."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fax/states": {
            "get": {
                "tags": [
                    "Fax.Pro Service"
                ],
                "summary": "Get Available States List",
                "description": "Retrieve a list of states (short names) where at least one Rate Center is available for Fax.Pro services.",
                "operationId": "getFaxStates",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A list of states where Rate Centers are available.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "description": "The total number of states with available Rate Centers."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "An array of state abbreviations where Rate Centers are available."
                                        }
                                    }
                                },
                                "example": {
                                    "total": 52,
                                    "data": [
                                        "AA",
                                        "AK",
                                        "AL",
                                        "WY"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fax/ratecenters": {
            "get": {
                "tags": [
                    "Fax.Pro Service"
                ],
                "summary": "Get Fax Rate Centers List",
                "description": "Retrieve a list of Rate Centers for a specific state where Fax.Pro services are available.",
                "operationId": "getFaxRatecenters",
                "parameters": [
                    {
                        "name": "state",
                        "in": "query",
                        "description": "The two-character state abbreviation (e.g., 'NC') for which to retrieve Rate Centers.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "NC"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Rate Centers available in the specified state.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "description": "The total number of Rate Centers in the specified state."
                                        },
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            },
                                            "description": "A map of Rate Center names in the specified state."
                                        }
                                    }
                                },
                                "example": {
                                    "total": 321,
                                    "data": {
                                        "ACME": "ACME",
                                        "ZEBULON": "ZEBULON"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fax/available": {
            "get": {
                "tags": [
                    "Fax.Pro Service"
                ],
                "summary": "Get Available Fax DID List",
                "description": "Retrieve a list of available Fax DIDs (Local or Toll-Free).",
                "operationId": "getAvailableFaxDIDs",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The type of DID to list. Values can be 'local' for Local DIDs or 'tf' for Toll-Free DIDs. Note that Toll-Free DIDs are not available for Tier 2.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "local",
                                "tf"
                            ]
                        }
                    },
                    {
                        "name": "tier",
                        "in": "query",
                        "description": "The tier level of the DIDs. Possible values are 0 (No TF DIDs available), 1, 1b (SMS available), 2 (No TF DIDs available), 3 (No TF DIDs available). If not provided, '1b' is used by default.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "0",
                                "1",
                                "1b",
                                "2",
                                "3"
                            ],
                            "default": "1b"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "The two-character state abbreviation for Local DIDs. Required if no NPA is provided.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "NC"
                        }
                    },
                    {
                        "name": "ratecenter",
                        "in": "query",
                        "description": "The rate center name for Local DIDs. Required if no NPA is provided.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "zip",
                        "in": "query",
                        "description": "The ZIP code (5 characters long) for Local DIDs. This option is for Tier 1b only and takes precedence over state/rate center and NPA.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 12345
                        }
                    },
                    {
                        "name": "npa",
                        "in": "query",
                        "description": "The three-character NPA code for Local DIDs. If provided, this takes precedence over state and rate center.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 919
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "The two-character Toll-Free code. This parameter is used only for Toll-Free DIDs. Example: 83.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 83
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of available Fax DIDs based on the provided criteria.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "description": "The total number of available Fax DIDs."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "An available Fax DID."
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "total": 20,
                                    "data": [
                                        "9194911062",
                                        "9196989686"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fax": {
            "post": {
                "tags": [
                    "Fax.Pro Service"
                ],
                "summary": "Order Fax DID Local or Toll Free, Create iFax.Pro Account",
                "description": "Order a Local or Toll-Free Fax DID and create a fully functional iFax.Pro account with the specified parameters.",
                "operationId": "orderFaxDID",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "The Fax DID to order.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "tier",
                        "in": "query",
                        "description": "The tier level for the DID. Possible values: 0 (No Toll-Free DIDs available), 1, 1b (SMS available), 2 (No Toll-Free DIDs available), 3 (No Toll-Free DIDs available). Defaults to '1b'.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "0",
                                "1",
                                "1b",
                                "2",
                                "3"
                            ],
                            "default": "1b"
                        }
                    },
                    {
                        "name": "cnam",
                        "in": "query",
                        "description": "Manage CNAM (Caller Name). Optional values: 'on' or 'off' (default).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    {
                        "name": "note",
                        "in": "query",
                        "description": "Optional note for the Fax DID.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pin",
                        "in": "query",
                        "description": "Port Out Security PIN code. Must be an integer between 4-6 characters.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1000,
                            "maximum": 999999
                        }
                    },
                    {
                        "name": "fax_name",
                        "in": "query",
                        "description": "Fax user name. If provided, a fully functional account will be created.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fax_login",
                        "in": "query",
                        "description": "Fax user login. If provided, a fully functional account will be created.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fax_password",
                        "in": "query",
                        "description": "Fax user password. If provided, a fully functional account will be created.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fax_email",
                        "in": "query",
                        "description": "Fax user Email address.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_full",
                        "in": "query",
                        "description": "Set to 'yes' for full user access. Defaults to 'no'.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "yes",
                                "no"
                            ],
                            "default": "no"
                        }
                    },
                    {
                        "name": "report_att",
                        "in": "query",
                        "description": "Attach fax file to the report. Optional values: 'yes' or 'no' (default).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "yes",
                                "no"
                            ]
                        }
                    },
                    {
                        "name": "post2url",
                        "in": "query",
                        "description": "Post fax to a specific URL. Provide a valid URL or set 'empty' to remove fax posting. This will be overwritten if 'ata_mac_address' is set.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ata_mac_address",
                        "in": "query",
                        "description": "Fax ATA MAC address. If set, this overwrites the 'post2url' value.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful, but no content is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": ""
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "The request was successful, but there is a warning.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "warning": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "Warning message"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "warning": [
                                        "Warning Message"
                                    ]
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred during the DID ordering process.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                },
                                "example": {
                                    "error": "DID Ordering Error"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Fax.Pro Service"
                ],
                "summary": "List Ordered DID(s) and their Configuration",
                "description": "Retrieve a list of ordered Fax DIDs and their configurations. Supports Unix style DID searching.",
                "operationId": "getFaxDIDs",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "Fax DID to retrieve info. Supports Unix style DID searching. Example: '*890' will find all DIDs ending with '890'. At least three digits are required.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of records to list per page. Default value is 25. Range is 5 to 200.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "minimum": 5,
                            "maximum": 200
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number to retrieve data from.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful, and a list of Fax DIDs with their configurations is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of DIDs found."
                                        },
                                        "total_pages": {
                                            "type": "integer",
                                            "description": "Total number of pages available."
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "description": "Current page number."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "did": {
                                                        "type": "string",
                                                        "description": "The Fax DID."
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "description": "Status of the DID (e.g., active)."
                                                    },
                                                    "did_type": {
                                                        "type": "string",
                                                        "description": "Type of the DID (e.g., local)."
                                                    },
                                                    "note": {
                                                        "type": "string",
                                                        "description": "Note associated with the DID."
                                                    },
                                                    "fax_name": {
                                                        "type": "string",
                                                        "description": "Name associated with the Fax account."
                                                    },
                                                    "fax_login": {
                                                        "type": "string",
                                                        "description": "Login name for the Fax account."
                                                    },
                                                    "is_full": {
                                                        "type": "string",
                                                        "description": "Indicates if full user access is enabled ('yes' or 'no')."
                                                    },
                                                    "report_att": {
                                                        "type": "string",
                                                        "description": "Indicates if fax files are attached to the report ('yes' or 'no')."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "total": 6,
                                    "total_pages": 1,
                                    "current_page": 1,
                                    "data": [
                                        {
                                            "did": "9194911062",
                                            "status": "active",
                                            "did_type": "local",
                                            "note": "DID Note",
                                            "fax_name": "John Doe",
                                            "fax_login": "mylogin",
                                            "is_full": "no",
                                            "report_att": "no"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Fax.Pro Service"
                ],
                "summary": "Manage Active Fax DID Configuration and Settings",
                "description": "Manage the configuration and settings of an active Fax DID. This includes updating account information, managing CNAM, and other related settings.",
                "operationId": "updateFaxDID",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "The Fax DID to manage.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "note",
                        "in": "query",
                        "description": "Optional note for the Fax DID.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pin",
                        "in": "query",
                        "description": "Port Out Security PIN code. Must be an integer between 4-6 characters.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1000,
                            "maximum": 999999
                        }
                    },
                    {
                        "name": "unset_acc",
                        "in": "query",
                        "description": "Set to 'on' to remove the Fax account. This takes priority over other account parameters provided in the same request.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on"
                            ]
                        }
                    },
                    {
                        "name": "fax_name",
                        "in": "query",
                        "description": "Fax user name. Required to create an iFax.Pro account.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fax_login",
                        "in": "query",
                        "description": "Fax user login. Required to create an iFax.Pro account.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fax_password",
                        "in": "query",
                        "description": "Fax user password. Required to create an iFax.Pro account.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fax_email",
                        "in": "query",
                        "description": "Fax user email address.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cnam",
                        "in": "query",
                        "description": "Manage CNAM (Caller Name). Optional values: 'on' or 'off'.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    {
                        "name": "is_full",
                        "in": "query",
                        "description": "Set to 'yes' for full user access. Defaults to 'no'.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "yes",
                                "no"
                            ],
                            "default": "no"
                        }
                    },
                    {
                        "name": "report_att",
                        "in": "query",
                        "description": "Attach fax file to the report. Optional values: 'yes' or 'no' (default).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "yes",
                                "no"
                            ]
                        }
                    },
                    {
                        "name": "post2url",
                        "in": "query",
                        "description": "Post fax to a specific URL. Provide a valid URL or set 'empty' to remove fax posting. This will be overwritten if 'ata_mac_address' is set.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ata_mac_address",
                        "in": "query",
                        "description": "Fax ATA MAC address. If set, this overwrites the 'post2url' value.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Empty"
                    },
                    "202": {
                        "description": "The request was successful, but there is a warning.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "warning": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "Warning message"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "warning": [
                                        "Warning Message"
                                    ]
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred during the DID configuration process.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                },
                                "example": {
                                    "error": "Error message"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Fax.Pro Service"
                ],
                "summary": "Remove Fax DID",
                "description": "Remove an active Fax DID from the system.",
                "operationId": "deleteFaxDID",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "The Fax DID to remove.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Empty"
                    },
                    "202": {
                        "description": "The request was successful, but there is a warning.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "warning": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "Warning message"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "warning": [
                                        "Warning Message"
                                    ]
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred during the removal process.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                },
                                "example": {
                                    "error": "Error message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fax/send": {
            "post": {
                "tags": [
                    "Fax.Pro Service"
                ],
                "summary": "Send Fax",
                "description": "Send a fax using the iFax.Pro service.",
                "operationId": "",
                "parameters": [
                    {
                        "name": "file",
                        "in": "query",
                        "description": "Base64 encoded content of the file to be sent. Supported file types: jpeg, jpg, gif, png, tif, tiff, pdf, doc, rtf, ods, xls, csv, ppt, txt, rar, zip, 7z. Maximum file size: 8MB.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filename",
                        "in": "query",
                        "description": "The name of the uploaded file.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "did_from",
                        "in": "query",
                        "description": "Sender's Fax Number. Must be an active ten-digit DID from your account.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "did_to",
                        "in": "query",
                        "description": "Ten-digit US-based destination Fax Number.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The fax was sent successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "fax_id": {
                                                    "type": "integer",
                                                    "description": "ID of the sent fax"
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "data": {
                                        "fax_id": 674944
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred while sending the fax.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                },
                                "example": {
                                    "error": "Error message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fax/move2voice": {
            "put": {
                "tags": [
                    "Fax.Pro Service"
                ],
                "summary": "Move Fax DID to Voice Inventory",
                "description": "Move a Fax DID from the fax inventory to the voice inventory.",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "The Fax DID to move to the voice inventory.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Empty"
                    },
                    "206": {
                        "description": "An error occurred while moving the DID.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                },
                                "example": {
                                    "error": "Error message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fax/pause": {
            "put": {
                "tags": [
                    "Fax.Pro Service"
                ],
                "summary": "Pause or Unpause iFax Pro Service",
                "description": "Pause or activate the fax service for a specific iFax Pro account using the provided DID.",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "The Fax DID associated with the iFax Pro account to pause or unpause.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "The action to perform on the iFax Pro account. Possible values: 'pause' to pause the account, 'unpause' to activate the account.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pause",
                                "unpause"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Empty"
                    },
                    "206": {
                        "description": "An error occurred while attempting to pause or unpause the service.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                },
                                "example": {
                                    "error": "Error message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fax/email": {
            "post": {
                "tags": [
                    "Fax.Pro Service"
                ],
                "summary": "Create or Update iFax Pro Email Permissions",
                "description": "Create or update email permissions for sending and receiving faxes for a specific iFax Pro account.",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "The Fax Pro DID associated with the email permissions to be set.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The email address for which permissions are being set.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "allow_send",
                        "in": "query",
                        "description": "Permission to allow sending faxes from this email address. Default is 'no'.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "yes",
                                "no"
                            ],
                            "default": "no"
                        }
                    },
                    {
                        "name": "allow_receive",
                        "in": "query",
                        "description": "Permission to allow receiving faxes at this email address. Default is 'no'.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "yes",
                                "no"
                            ],
                            "default": "no"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty"
                    },
                    "206": {
                        "description": "An error occurred while setting the email permissions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                },
                                "example": {
                                    "error": "Error message"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Fax.Pro Service"
                ],
                "summary": "Delete iFax Pro Email Permissions Record",
                "description": "Delete an email permission associated with a specific iFax Pro account.",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "The Fax Enterprise DID associated with the email permission.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The email address associated with the permission to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The email permission was successfully deleted.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": ""
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred while deleting the email permission.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                },
                                "example": {
                                    "error": "Error message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fax2/email": {
            "get": {
                "tags": [
                    "Fax.Enterprise Service"
                ],
                "summary": "List iFax Enterprise Email Permissions Inventory",
                "description": "Retrieve a list of email permissions associated with iFax Enterprise accounts.",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "The Fax Enterprise DID to filter the email permissions.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The email address to filter the email permissions.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful, and the list of email permissions is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of records"
                                        },
                                        "total_pages": {
                                            "type": "integer",
                                            "description": "Total number of pages"
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "description": "Current page number"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "sname": {
                                                        "type": "string",
                                                        "description": "Fax login name"
                                                    },
                                                    "did": {
                                                        "type": "string",
                                                        "description": "Fax Enterprise DID"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "description": "Email address associated with the permissions"
                                                    },
                                                    "allow_send": {
                                                        "type": "string",
                                                        "description": "Permission to send faxes",
                                                        "enum": [
                                                            "yes",
                                                            "no"
                                                        ]
                                                    },
                                                    "allow_receive": {
                                                        "type": "string",
                                                        "description": "Permission to receive faxes",
                                                        "enum": [
                                                            "yes",
                                                            "no"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "total": 10,
                                    "total_pages": 2,
                                    "current_page": 1,
                                    "data": [
                                        {
                                            "sname": "myFaxLogin",
                                            "did": "3025490877",
                                            "email": "john@doe.com",
                                            "allow_send": "yes",
                                            "allow_receive": "no"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred while retrieving the email permissions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                },
                                "example": {
                                    "error": "Error message"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "iFax Enterprise Management"
                ],
                "summary": "Create or Update iFax Enterprise Email Permissions",
                "description": "Set or update email permissions for a specific iFax Enterprise DID.",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "Fax Enterprise DID to set email permissions.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email address to set permissions for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "allow_send",
                        "in": "query",
                        "description": "Allow sending faxes. Values: 'on' or 'off' (default).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    {
                        "name": "allow_receive",
                        "in": "query",
                        "description": "Allow receiving faxes. Values: 'on' or 'off' (default).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty"
                    },
                    "206": {
                        "description": "An error occurred while creating or updating email permissions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    },
                                    "example": {
                                        "error": "Error message"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "iFax Enterprise Management"
                ],
                "summary": "Delete iFax Enterprise Email Permissions Record",
                "description": "Remove an email permissions record for a specific iFax Enterprise DID.",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "Fax Enterprise DID to delete the email permissions for.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email address associated with the permissions to delete.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The email permissions record was successfully deleted.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": ""
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred while deleting the email permissions record.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    },
                                    "example": {
                                        "error": "Error message"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fax2": {
            "post": {
                "tags": [
                    "iFax Enterprise Management"
                ],
                "summary": "Order Local or Toll-Free Fax DID, Create and Configure iFax Enterprise Account",
                "description": "Order a Local or Toll-Free Fax DID and create a fully functional iFax Enterprise account with the specified parameters.",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "The Fax DID to order.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "tier",
                        "in": "query",
                        "description": "The tier level for the DID. Possible values: 0 (No Toll-Free DIDs available), 1, 1b (SMS available), 2 (No Toll-Free DIDs available), 3 (No Toll-Free DIDs available). Defaults to '1b'.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "0",
                                "1",
                                "1b",
                                "2",
                                "3"
                            ],
                            "default": "1b"
                        }
                    },
                    {
                        "name": "note",
                        "in": "query",
                        "description": "Optional note for the Fax DID.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pin",
                        "in": "query",
                        "description": "Port Out Security PIN code. Must be an integer between 4-6 characters.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1000,
                            "maximum": 999999
                        }
                    },
                    {
                        "name": "sname",
                        "in": "query",
                        "description": "Group short name to add to the fax number. The group must be created before ordering the DID. If not specified, a functional fax account will not be created.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cnam",
                        "in": "query",
                        "description": "Manage CNAM (Caller Name). Optional values: 'on' or 'off' (default).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    {
                        "name": "post2url",
                        "in": "query",
                        "description": "Post fax to a specific URL. Provide a valid URL or set 'empty' to remove fax posting. This will be overwritten if 'ata_mac_address' is set.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ata_mac_address",
                        "in": "query",
                        "description": "Fax ATA MAC address. If set, this overwrites the 'post2url' value.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty"
                    },
                    "202": {
                        "description": "The request was successful, but there is a warning.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "warning": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "Warning message"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "warning": [
                                        "Warning Message"
                                    ]
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred during the DID ordering process.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                },
                                "example": {
                                    "error": "Error message"
                                }
                            }
                        }
                    }
                }
            },
            "/fax2": {
                "post": {
                    "tags": [
                        "iFax Enterprise Management"
                    ],
                    "summary": "Order Local or Toll-Free Fax DID, Create and Configure iFax Enterprise Account",
                    "description": "Order a Local or Toll-Free Fax DID and create a fully functional iFax Enterprise account with the specified parameters.",
                    "parameters": [
                        {
                            "name": "did",
                            "in": "query",
                            "description": "The Fax DID to order.",
                            "required": true,
                            "schema": {
                                "type": "integer"
                            }
                        },
                        {
                            "name": "tier",
                            "in": "query",
                            "description": "The tier level for the DID. Possible values: 0 (No Toll-Free DIDs available), 1, 1b (SMS available), 2 (No Toll-Free DIDs available), 3 (No Toll-Free DIDs available). Defaults to '1b'.",
                            "required": false,
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "0",
                                    "1",
                                    "1b",
                                    "2",
                                    "3"
                                ],
                                "default": "1b"
                            }
                        },
                        {
                            "name": "note",
                            "in": "query",
                            "description": "Optional note for the Fax DID.",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "pin",
                            "in": "query",
                            "description": "Port Out Security PIN code. Must be an integer between 4-6 characters.",
                            "required": false,
                            "schema": {
                                "type": "integer",
                                "minimum": 1000,
                                "maximum": 999999
                            }
                        },
                        {
                            "name": "sname",
                            "in": "query",
                            "description": "Group short name to add to the fax number. The group must be created before ordering the DID. If not specified, a functional fax account will not be created.",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "cnam",
                            "in": "query",
                            "description": "Manage CNAM (Caller Name). Optional values: 'on' or 'off' (default).",
                            "required": false,
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "on",
                                    "off"
                                ]
                            }
                        },
                        {
                            "name": "post2url",
                            "in": "query",
                            "description": "Post fax to a specific URL. Provide a valid URL or set 'empty' to remove fax posting. This will be overwritten if 'ata_mac_address' is set.",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "ata_mac_address",
                            "in": "query",
                            "description": "Fax ATA MAC address. If set, this overwrites the 'post2url' value.",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The Fax DID was successfully ordered and configured.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "object",
                                        "properties": {
                                            "total": {
                                                "type": "integer",
                                                "description": "Total number of DIDs."
                                            },
                                            "total_pages": {
                                                "type": "integer",
                                                "description": "Total number of pages."
                                            },
                                            "current_page": {
                                                "type": "integer",
                                                "description": "The current page number."
                                            },
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "did": {
                                                            "type": "string",
                                                            "description": "The ordered Fax DID."
                                                        },
                                                        "status": {
                                                            "type": "string",
                                                            "description": "The status of the DID."
                                                        },
                                                        "did_type": {
                                                            "type": "string",
                                                            "description": "The type of the DID, e.g., local or toll-free."
                                                        },
                                                        "note": {
                                                            "type": "string",
                                                            "description": "The note associated with the DID."
                                                        },
                                                        "sname": {
                                                            "type": "string",
                                                            "description": "The group short name associated with the DID."
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "example": {
                                            "total": 6,
                                            "total_pages": 1,
                                            "current_page": 1,
                                            "data": [
                                                {
                                                    "did": "9194911062",
                                                    "status": "active",
                                                    "did_type": "local",
                                                    "note": "DID Note",
                                                    "sname": "groupShortName"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "202": {
                            "description": "The request was successful, but there is a warning.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "object",
                                        "properties": {
                                            "warning": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "description": "Warning message"
                                                }
                                            }
                                        }
                                    },
                                    "example": {
                                        "warning": [
                                            "Warning Message"
                                        ]
                                    }
                                }
                            }
                        },
                        "206": {
                            "description": "An error occurred during the DID ordering process.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "object",
                                        "properties": {
                                            "error": {
                                                "type": "string",
                                                "description": "Error message"
                                            }
                                        }
                                    },
                                    "example": {
                                        "error": "Error message"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "iFax Enterprise Management"
                ],
                "summary": "List Fax DID Properties",
                "description": "Retrieve information about iFax Enterprise DIDs with optional search and pagination capabilities.",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "Fax DID to retrieve info. Supports Unix style DID searching (e.g., '*890' to find all DIDs ending with 890, '123*' to find all DIDs starting with 123, '*456*' to find all DIDs containing 456). The search pattern will be ignored if less than three digits are used.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of records to list in a page. Default is 25. Set value in the range of 5 to 200 if needed.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "minimum": 5,
                            "maximum": 200
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number to retrieve data from.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with details about the DIDs.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of DIDs found."
                                        },
                                        "total_pages": {
                                            "type": "integer",
                                            "description": "Total number of pages available."
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "description": "Current page number."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "did": {
                                                        "type": "string",
                                                        "description": "Fax DID."
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "description": "Status of the DID (e.g., active)."
                                                    },
                                                    "did_type": {
                                                        "type": "string",
                                                        "description": "Type of DID (e.g., local, toll-free)."
                                                    },
                                                    "note": {
                                                        "type": "string",
                                                        "description": "Optional note associated with the DID."
                                                    },
                                                    "sname": {
                                                        "type": "string",
                                                        "description": "Group short name associated with the DID."
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "example": {
                                        "total": 6,
                                        "total_pages": 1,
                                        "current_page": 1,
                                        "data": [
                                            {
                                                "did": "9194911062",
                                                "status": "active",
                                                "did_type": "local",
                                                "note": "DID Note",
                                                "sname": "groupShortName"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "iFax Enterprise Management"
                ],
                "summary": "Update Fax DID Properties",
                "description": "Update the properties of a specified iFax Enterprise DID.",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "The Fax DID to manage.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "note",
                        "in": "query",
                        "description": "Optional note for the DID.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pin",
                        "in": "query",
                        "description": "Port Out Security PIN code. Must be an integer between 4-6 characters.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1000,
                            "maximum": 999999
                        }
                    },
                    {
                        "name": "sname",
                        "in": "query",
                        "description": "Group short name to update. Set to an empty value to remove the current group.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cnam",
                        "in": "query",
                        "description": "Manage CNAM (Caller Name). Optional values: 'on' or 'off'.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    {
                        "name": "post2url",
                        "in": "query",
                        "description": "Post fax to a specific URL. Provide a valid URL or set 'empty' (off) to remove fax posting. This will be overwritten if 'ata_mac_address' is set.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ata_mac_address",
                        "in": "query",
                        "description": "Fax ATA MAC address. Provide a valid MAC address or set 'empty' (off) to remove the fax ATA. This overwrites the 'post2url' value.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty"
                    },
                    "202": {
                        "description": "The request was successful, but there is a warning.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "warning": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "Warning message"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "warning": [
                                        "Warning Message"
                                    ]
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred during the DID property update process.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                },
                                "example": {
                                    "error": "Error message"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "iFax Enterprise Management"
                ],
                "summary": "Remove Fax DID",
                "description": "Remove a specified iFax Enterprise DID.",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "The DID to remove.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty"
                    },
                    "202": {
                        "description": "The request was successful, but there is a warning.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "warning": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "Warning message"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "warning": [
                                        "Warning Message"
                                    ]
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred during the DID removal process.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                },
                                "example": {
                                    "error": "Error message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fax2/group": {
            "post": {
                "tags": [
                    "iFax Enterprise Management"
                ],
                "summary": "Create iFax Group",
                "description": "Create a new iFax Group of users (company).",
                "parameters": [
                    {
                        "name": "sname",
                        "in": "query",
                        "description": "Group short name. Up to 24 characters.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 24
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Group name. Up to 128 characters.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 128
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty"
                    },
                    "206": {
                        "description": "An error occurred during the group creation process.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                },
                                "example": {
                                    "error": "Error message"
                                }
                            }
                        }
                    }
                }
            },
            "/fax2/group": {
                "post": {
                    "tags": [
                        "iFax Enterprise Management"
                    ],
                    "summary": "Create iFax Group",
                    "description": "Create a new iFax Group of users (company).",
                    "parameters": [
                        {
                            "name": "sname",
                            "in": "query",
                            "description": "Group short name. Up to 24 characters.",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "maxLength": 24
                            }
                        },
                        {
                            "name": "name",
                            "in": "query",
                            "description": "Group name. Up to 128 characters.",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "maxLength": 128
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The iFax Group was successfully created.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string",
                                        "example": ""
                                    }
                                }
                            }
                        },
                        "206": {
                            "description": "An error occurred during the group creation process.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "object",
                                        "properties": {
                                            "error": {
                                                "type": "string",
                                                "description": "Error message"
                                            }
                                        }
                                    },
                                    "example": {
                                        "error": "Error message"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "iFax Enterprise Management"
                ],
                "summary": "List iFax Groups",
                "description": "List iFax Groups (companies) and their properties.",
                "parameters": [
                    {
                        "name": "sname",
                        "in": "query",
                        "description": "Group short name to show property.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The iFax groups were successfully retrieved.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of iFax groups."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "sname": {
                                                        "type": "string",
                                                        "description": "Group short name."
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Group name."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "total": 2,
                                    "data": [
                                        {
                                            "sname": "shortName1",
                                            "name": "long Name1"
                                        },
                                        {
                                            "sname": "shortName2",
                                            "name": "long Name2"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "iFax Enterprise Management"
                ],
                "summary": "Update iFax Group",
                "description": "Update iFax Groups (companies) and their properties.",
                "parameters": [
                    {
                        "name": "sname",
                        "in": "query",
                        "description": "Existing Group short name to modify.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sname_new",
                        "in": "query",
                        "description": "New Group short name. Up to 24 characters.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name_new",
                        "in": "query",
                        "description": "New Group name. Up to 128 characters.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty"
                    },
                    "206": {
                        "description": "An error occurred during the update process.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                },
                                "example": {
                                    "error": "Error message"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "iFax Enterprise Management"
                ],
                "summary": "Remove iFax Group",
                "description": "Completely remove an iFax Enterprise group.",
                "parameters": [
                    {
                        "name": "sname",
                        "in": "query",
                        "description": "Group short name to remove.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty"
                    },
                    "206": {
                        "description": "An error occurred during the group removal process.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                },
                                "example": {
                                    "error": "Error message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fax2/user": {
            "post": {
                "tags": [
                    "iFax Enterprise Management"
                ],
                "summary": "Create iFax User",
                "description": "Create a new iFax Enterprise user for a specified iFax group.",
                "parameters": [
                    {
                        "name": "fax_login",
                        "in": "query",
                        "description": "Fax user login. Must be unique in the system, up to 36 characters.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 36
                        }
                    },
                    {
                        "name": "fax_password",
                        "in": "query",
                        "description": "Fax user password, up to 64 characters.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 64
                        }
                    },
                    {
                        "name": "sname",
                        "in": "query",
                        "description": "Group short name to add the new user to.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fax_name",
                        "in": "query",
                        "description": "Fax user first name, up to 48 characters.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 48
                        }
                    },
                    {
                        "name": "fax_lname",
                        "in": "query",
                        "description": "Fax user last name, up to 48 characters.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 48
                        }
                    },
                    {
                        "name": "fax_email",
                        "in": "query",
                        "description": "Fax user contact email. Must be a valid email address.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "email"
                        }
                    },
                    {
                        "name": "is_admin",
                        "in": "query",
                        "description": "Set the user's admin privileges. Values: 'on' or 'off' (default).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ],
                            "default": "off"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty"
                    },
                    "206": {
                        "description": "An error occurred during the user creation process.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                },
                                "example": {
                                    "error": "Error message"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "iFax Enterprise Management"
                ],
                "summary": "List iFax Users",
                "description": "Retrieve a list of existing iFax Enterprise users with optional filters.",
                "parameters": [
                    {
                        "name": "sname",
                        "in": "query",
                        "description": "Fax group short name to view details.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fax_login",
                        "in": "query",
                        "description": "Fax user login to view details.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of iFax users retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of users."
                                        },
                                        "total_pages": {
                                            "type": "integer",
                                            "description": "Total number of pages available."
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "description": "Current page number."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "sname": {
                                                        "type": "string",
                                                        "description": "Group short name."
                                                    },
                                                    "fax_name": {
                                                        "type": "string",
                                                        "description": "Fax user first name."
                                                    },
                                                    "fax_lname": {
                                                        "type": "string",
                                                        "description": "Fax user last name."
                                                    },
                                                    "login": {
                                                        "type": "string",
                                                        "description": "Fax user login."
                                                    },
                                                    "password": {
                                                        "type": "string",
                                                        "description": "Fax user password."
                                                    },
                                                    "is_admin": {
                                                        "type": "string",
                                                        "description": "Admin status ('on' or 'off')."
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "example": {
                                        "total": 10,
                                        "total_pages": 2,
                                        "current_page": 1,
                                        "data": [
                                            {
                                                "sname": "myGroupName",
                                                "fax_name": "John",
                                                "fax_lname": "Doe",
                                                "login": "mylogin",
                                                "password": "myPassword",
                                                "is_admin": "on"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred while retrieving the user list.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    },
                                    "example": {
                                        "error": "Error message"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "iFax Enterprise Management"
                ],
                "summary": "Update iFax Enterprise User Properties",
                "description": "Modify properties of an existing iFax Enterprise user.",
                "parameters": [
                    {
                        "name": "fax_login",
                        "in": "query",
                        "description": "Fax user login to modify. The user must exist in your inventory.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fax_login_new",
                        "in": "query",
                        "description": "New fax user login. Up to 36 characters, must be unique in the system.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 36
                        }
                    },
                    {
                        "name": "fax_password",
                        "in": "query",
                        "description": "New fax user password. Up to 64 characters.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 64
                        }
                    },
                    {
                        "name": "fax_name",
                        "in": "query",
                        "description": "Fax user first name. Up to 48 characters.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 48
                        }
                    },
                    {
                        "name": "fax_lname",
                        "in": "query",
                        "description": "Fax user last name. Up to 48 characters.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 48
                        }
                    },
                    {
                        "name": "fax_email",
                        "in": "query",
                        "description": "Fax user contact email. Must be a valid email address.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "email"
                        }
                    },
                    {
                        "name": "is_admin",
                        "in": "query",
                        "description": "Set the user admin privileges. Values: 'on' or 'off' (default).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ],
                            "default": "off"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty"
                    },
                    "206": {
                        "description": "An error occurred while updating the fax user properties.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    },
                                    "example": {
                                        "error": "Error message"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "iFax Enterprise Management"
                ],
                "summary": "Remove iFax Enterprise User",
                "description": "Completely remove an existing iFax Enterprise user.",
                "parameters": [
                    {
                        "name": "fax_login",
                        "in": "query",
                        "description": "Fax user login to remove. The user must exist in your inventory.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty"
                    },
                    "206": {
                        "description": "An error occurred while removing the fax user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    },
                                    "example": {
                                        "error": "Error message"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fax2/permit": {
            "post": {
                "tags": [
                    "iFax Enterprise Management"
                ],
                "summary": "Create or Update iFax Enterprise User Permissions",
                "description": "Create or update permissions for an iFax Enterprise user for a specific fax DID.",
                "parameters": [
                    {
                        "name": "fax_login",
                        "in": "query",
                        "description": "Fax User Login to manage permissions. The user must exist in your inventory.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "did",
                        "in": "query",
                        "description": "Fax DID to manage permissions. Must be an active DID.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "allow_send",
                        "in": "query",
                        "description": "Allow fax sending. Values: 'on' | 'off'.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    {
                        "name": "allow_delete",
                        "in": "query",
                        "description": "Allow fax deletion. Values: 'on' | 'off'.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    {
                        "name": "allow_list_in",
                        "in": "query",
                        "description": "Allow viewing of inbound faxes. Values: 'on' | 'off'.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    {
                        "name": "allow_list_out",
                        "in": "query",
                        "description": "Allow viewing of outbound faxes. Values: 'on' | 'off'.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty"
                    },
                    "206": {
                        "description": "An error occurred while managing user permissions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    },
                                    "example": {
                                        "error": "Error message"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "iFax Enterprise Management"
                ],
                "summary": "List iFax Enterprise Users Permissions",
                "description": "Retrieve the permissions of iFax Enterprise users for specific DIDs or all users if no DID is specified.",
                "parameters": [
                    {
                        "name": "fax_login",
                        "in": "query",
                        "description": "Fax user login to show permissions.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "did",
                        "in": "query",
                        "description": "Fax Enterprise DID to show permissions.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permissions were successfully listed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of records."
                                        },
                                        "total_pages": {
                                            "type": "integer",
                                            "description": "Total number of pages."
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "description": "Current page number."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "create_date": {
                                                        "type": "string",
                                                        "description": "Date when the permission was created."
                                                    },
                                                    "fax_login": {
                                                        "type": "string",
                                                        "description": "Fax user login."
                                                    },
                                                    "did": {
                                                        "type": "string",
                                                        "description": "Fax DID."
                                                    },
                                                    "allow_send": {
                                                        "type": "string",
                                                        "description": "Permission to send faxes.",
                                                        "enum": [
                                                            "on",
                                                            "off"
                                                        ]
                                                    },
                                                    "allow_delete": {
                                                        "type": "string",
                                                        "description": "Permission to delete faxes.",
                                                        "enum": [
                                                            "on",
                                                            "off"
                                                        ]
                                                    },
                                                    "allow_list_in": {
                                                        "type": "string",
                                                        "description": "Permission to view inbound faxes.",
                                                        "enum": [
                                                            "on",
                                                            "off"
                                                        ]
                                                    },
                                                    "allow_list_out": {
                                                        "type": "string",
                                                        "description": "Permission to view outbound faxes.",
                                                        "enum": [
                                                            "on",
                                                            "off"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "example": {
                                        "total": 10,
                                        "total_pages": 2,
                                        "current_page": 1,
                                        "data": [
                                            {
                                                "create_date": "Mar 12, 2019",
                                                "fax_login": "myFaxLogin",
                                                "did": "3025490877",
                                                "allow_send": "off",
                                                "allow_delete": "off",
                                                "allow_list_in": "off",
                                                "allow_list_out": "off"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred while listing user permissions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    },
                                    "example": {
                                        "error": "Error message"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "iFax Enterprise Management"
                ],
                "summary": "Delete iFax Enterprise User Permissions",
                "description": "Remove permissions for a specific iFax Enterprise user on a given DID.",
                "parameters": [
                    {
                        "name": "fax_login",
                        "in": "query",
                        "description": "Fax user login whose permissions will be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "did",
                        "in": "query",
                        "description": "Fax Enterprise DID from which permissions will be deleted.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty"
                    },
                    "206": {
                        "description": "An error occurred while deleting user permissions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    },
                                    "example": {
                                        "error": "Error message"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fax2/upload": {
            "post": {
                "tags": [
                    "Fax File Management"
                ],
                "summary": "Upload Fax File",
                "description": "Upload a fax file to the fax server. The file must be Base64 encoded and should be one of the allowed file types.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "description": "Base64 encoded file content. Allowed file types: jpeg, jpg, gif, png, tif, tiff, pdf, doc, rtf, ods, xls, csv, ppt, txt, rar, zip, 7z. Max file size: 8Mb.",
                                        "example": "Base64 encoded string"
                                    },
                                    "filename": {
                                        "type": "string",
                                        "description": "Name of the uploaded file.",
                                        "example": "document.pdf"
                                    }
                                },
                                "required": [
                                    "file",
                                    "filename"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The file was successfully uploaded.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "file_id": {
                                            "type": "string",
                                            "description": "Unique ID assigned to the uploaded file.",
                                            "example": "5f0cdbb1-afe4-4c50-aa66-3c8c89bd0a06"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred while uploading the file.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    },
                                    "example": {
                                        "error": "Error message"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fax2/send": {
            "post": {
                "tags": [
                    "Fax Sending"
                ],
                "summary": "Send iFax",
                "description": "Send a fax using an active DID from your account to a US-based destination fax number.",
                "parameters": [
                    {
                        "name": "did_from",
                        "in": "query",
                        "description": "Sender Fax Number. Must be an active DID from your account. It should be a ten-digit number.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "did_to",
                        "in": "query",
                        "description": "US-based Destination Fax Number. It should be a ten-digit number.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "file_id",
                        "in": "query",
                        "description": "Array of IDs of the uploaded file(s).",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The fax was successfully sent.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "fax_id": {
                                            "type": "integer",
                                            "description": "The unique ID assigned to the sent fax.",
                                            "example": 674944
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred while sending the fax.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    },
                                    "example": {
                                        "error": "Error message"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fax2/pause": {
            "put": {
                "tags": [
                    "Service Management"
                ],
                "summary": "Pause/Unpause iFax Enterprise Service",
                "description": "Pause or unpause the iFax service for a specific iFax Enterprise account.",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "Fax DID to manage. The DID should be associated with the iFax Enterprise account.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Action to perform. Specify 'pause' to pause the service or 'unpause' to activate the service.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pause",
                                "unpause"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty"
                    },
                    "206": {
                        "description": "An error occurred while trying to pause or unpause the iFax service.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    },
                                    "example": {
                                        "error": "Error message"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/callhistory": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve Voice Call History",
                "description": "Retrieve voice call history for a customer account, with options to filter by additional parameters.",
                "parameters": [
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Timezone identifer to convert start time to exmple America/New_York",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_id",
                        "in": "query",
                        "description": "Last stored call ID. Only CDRs with IDs greater than the specified last_id will be returned. If last_id is set, the period value will be ignored.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "trunk",
                        "in": "query",
                        "description": "SIP Trunk name(s) to retrieve calls for. Can be a single value or an array of values.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Date options to filter calls. Possible values: 'thismonth', 'previousmonth', 'thishour', 'previoushour', 'today', 'yesterday', or an array [startDate, endDate] (unix Time Stamp in EST). Max date range: one month.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "thismonth",
                                "previousmonth",
                                "thishour",
                                "previoushour",
                                "today",
                                "yesterday"
                            ],
                            "examples": [
                                "thismonth",
                                "previousmonth",
                                "today",
                                "array[1672531200, 1672617600]"
                            ]
                        }
                    },
                    {
                        "name": "success_call_only",
                        "in": "query",
                        "description": "Show successful calls only. Values: 'on', 'off' (default).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    {
                        "name": "did",
                        "in": "query",
                        "description": "Retrieve calls for a specific DID.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Call type (direction). Values include various inbound and outbound call types.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "in",
                                "out",
                                "outbound",
                                "outbound_tf",
                                "outbound_zone2",
                                "outbound_fax",
                                "outbound_fax_tf",
                                "outbound_enter_fax",
                                "outbound_info",
                                "inbound",
                                "inbound_tf",
                                "inbound_fax",
                                "inbound_enter_fax",
                                "inbound_tf_nous_tf"
                            ]
                        }
                    },
                    {
                        "name": "country_id",
                        "in": "query",
                        "description": "Destination country ID or Destination Zone 2 country ID. Ignored if summary_only is set to 'on'.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "summary_only",
                        "in": "query",
                        "description": "Display call summary only. Values: 'on', 'off' (default).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of records to show per page. Range: 5 - 5000, default is 25.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 5,
                            "maximum": 5000,
                            "default": 25
                        }
                    },
                    {
                        "name": "get_id",
                        "in": "query",
                        "description": "Show CDR ID. Values: 'on', 'off' (default).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    {
                        "name": "get_fax",
                        "in": "query",
                        "description": "Retrieve fax transmission per minute stat. Values: 'on' (default), 'off'.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved call history.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of records retrieved.",
                                            "example": 2
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "call_type": {
                                                        "type": "string",
                                                        "description": "Type of the call.",
                                                        "example": "Outbound Local Call"
                                                    },
                                                    "call_number": {
                                                        "type": "integer",
                                                        "description": "The number of calls.",
                                                        "example": 25
                                                    },
                                                    "total_duration_min": {
                                                        "type": "string",
                                                        "description": "Total duration of calls in minutes.",
                                                        "example": "10.00"
                                                    },
                                                    "cost": {
                                                        "type": "string",
                                                        "description": "Total cost of the calls.",
                                                        "example": "0.12"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred while retrieving call history.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    },
                                    "example": {
                                        "error": "Error message"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/faxhistory": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve Fax History",
                "description": "Retrieve fax activity for a customer account, with options to filter by additional parameters.",
                "parameters": [
                    {
                        "name": "did",
                        "in": "query",
                        "description": "DID(s) to list faxes for. Can be a single value or an array of values.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "service",
                        "in": "query",
                        "description": "Type of fax to list. Possible values: 'pro', 'enterprise'.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pro",
                                "enterprise"
                            ]
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "List inbound or outbound faxes. Possible values: 'out', 'in'.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "out",
                                "in"
                            ]
                        }
                    },
                    {
                        "name": "fax_id",
                        "in": "query",
                        "description": "List only specific fax by Fax ID. Refer to methods #4.5.8 and #4.6.22 for details.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Time range to list faxes. Possible values: 'today', 'yesterday', or array with date-time range.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "type": "string",
                                    "enum": [
                                        "today",
                                        "yesterday"
                                    ]
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of records to show per page. Range: 5 - 1000, default is 25.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 5,
                            "maximum": 1000,
                            "default": 25
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number to show.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved fax history.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of fax records retrieved.",
                                            "example": 49
                                        },
                                        "total_pages": {
                                            "type": "integer",
                                            "description": "Total number of pages of fax records.",
                                            "example": 10
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "description": "Current page number of the retrieved fax records.",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "fax_id": {
                                                        "type": "string",
                                                        "description": "Unique identifier of the fax.",
                                                        "example": "718736089913419320182796451"
                                                    },
                                                    "send_time": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "description": "Time when the fax was sent, in ISO 8601 format.",
                                                        "example": "2019-03-20T12:25:24+00:00"
                                                    },
                                                    "did_from": {
                                                        "type": "string",
                                                        "description": "Sender DID of the fax.",
                                                        "example": "4037689155"
                                                    },
                                                    "did_to": {
                                                        "type": "string",
                                                        "description": "Recipient DID of the fax.",
                                                        "example": "4037689155"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "description": "Type of fax, either inbound or outbound.",
                                                        "example": "out"
                                                    },
                                                    "service": {
                                                        "type": "string",
                                                        "description": "Service type, either 'pro' or 'enterprise'.",
                                                        "example": "enterprise"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "description": "Current status of the fax.",
                                                        "example": "processing"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred while retrieving fax history.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    },
                                    "example": {
                                        "error": "Error message"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/faxdownload": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Download Fax File",
                "description": "Download a sent or received fax file by providing the Fax ID.",
                "parameters": [
                    {
                        "name": "fax_id",
                        "in": "query",
                        "description": "Fax ID of the file to download.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully downloaded the fax file.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "fax_base64": {
                                                    "type": "string",
                                                    "description": "Base64 encoded content of the fax file.",
                                                    "example": "JVBERYmoKP...0NzUzCiUlRU9GCg=="
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "An error occurred while downloading the fax file.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    },
                                    "example": {
                                        "error": "Error message"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/lnp/check": {
            "get": {
                "tags": [
                    "Local Number Portability"
                ],
                "summary": "Check Local Number Portability",
                "description": "Check the portability status for specific US-based telephone numbers (TNs). An array of TNs is allowed.",
                "parameters": [
                    {
                        "name": "number2port",
                        "in": "query",
                        "description": "US-based telephone number(s) to check portability for. An array of numbers is allowed.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Portability check successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "foc_days": {
                                                    "type": "integer",
                                                    "description": "Number of days for which the number is free of charge (FOC).",
                                                    "example": 3
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "An error occurred while checking portability.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    },
                                    "example": {
                                        "error": "Error Message"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/lnp": {
            "post": {
                "tags": [
                    "Local Number Portability"
                ],
                "summary": "Create Local Number Portability Request",
                "description": "Create a new Local Number Portability (LNP) request for porting US-based telephone numbers.",
                "parameters": [
                    {
                        "name": "number2port",
                        "in": "query",
                        "description": "US-based telephone number(s) to be ported. An array of TNs is allowed.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "foc_date",
                        "in": "query",
                        "description": "Requested Free of Charge (FOC) date in YYYY-MM-DD format. Not available for mobile DIDs.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "activate_time",
                        "in": "query",
                        "description": "Requested FOC activation time in HH:00 format (EST).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "time"
                        }
                    },
                    {
                        "name": "did_mode",
                        "in": "query",
                        "description": "Type of DID. Possible values: voice, fax. Default is voice.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "voice",
                            "enum": [
                                "voice",
                                "fax"
                            ]
                        }
                    },
                    {
                        "name": "trunk",
                        "in": "query",
                        "description": "SIP trunk name to route DID on completion. For voice DIDs only. Must be a valid active trunk.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partial_port",
                        "in": "query",
                        "description": "Partial Port. Values: yes or no. Default is no.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "no",
                            "enum": [
                                "yes",
                                "no"
                            ]
                        }
                    },
                    {
                        "name": "extra_services",
                        "in": "query",
                        "description": "Additional Remaining Services. Required if partial_port is set to yes.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "Service location. Values: business, residential. Default is business.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "business",
                            "enum": [
                                "business",
                                "residential"
                            ]
                        }
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "description": "Company name. Required if location is set to business.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 100
                        }
                    },
                    {
                        "name": "wireless_no",
                        "in": "query",
                        "description": "Wireless number type. Values: no, yes. Default value is no.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "no",
                            "enum": [
                                "no",
                                "yes"
                            ]
                        }
                    },
                    {
                        "name": "pincode",
                        "in": "query",
                        "description": "Wireless account PIN code. Required if wireless_no is set to yes.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ssn",
                        "in": "query",
                        "description": "SSN last four digits. Required if wireless_no is set to yes.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "lidb_list",
                        "in": "query",
                        "description": "LIDB/Directory Listings. Values: no, yes. Default value is no.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "no",
                            "enum": [
                                "no",
                                "yes"
                            ]
                        }
                    },
                    {
                        "name": "provider_name",
                        "in": "query",
                        "description": "Current Service provider name. Max 255 characters.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "account_no",
                        "in": "query",
                        "description": "Service Provider Account Number.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "authorize_contact",
                        "in": "query",
                        "description": "Authorized Contact. Max 25 characters.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 25
                        }
                    },
                    {
                        "name": "contact_title",
                        "in": "query",
                        "description": "Contact title. Example: Employee, President, CEO. Max 50 characters.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 50
                        }
                    },
                    {
                        "name": "street_no",
                        "in": "query",
                        "description": "Service street number. Max 50 characters.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 50
                        }
                    },
                    {
                        "name": "dir_prefix",
                        "in": "query",
                        "description": "DIR prefix. Examples: None, N, NE, E, SE, S, SW, W, NW. Max 10 characters.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 10
                        }
                    },
                    {
                        "name": "street_name",
                        "in": "query",
                        "description": "Street name. Max 100 characters.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 100
                        }
                    },
                    {
                        "name": "dir_suffix",
                        "in": "query",
                        "description": "DIR suffix. Example: None, N, NE, E, SE, S, SW, W, NW. Max 10 characters.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 10
                        }
                    },
                    {
                        "name": "service_unit",
                        "in": "query",
                        "description": "Service Suite/Unit. Max 100 characters.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 100
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "Service City. Max 100 characters.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 100
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Service State.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 2
                        }
                    },
                    {
                        "name": "zipcode",
                        "in": "query",
                        "description": "Service zip code. Max 20 characters.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 20
                        }
                    },
                    {
                        "name": "billing_telephone_no",
                        "in": "query",
                        "description": "US-based billing telephone number. Ten characters.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 10
                        }
                    },
                    {
                        "name": "port_out_pin",
                        "in": "query",
                        "description": "Current carrier porting out PIN code. Integer, 4-10 characters.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 4,
                            "maxLength": 10
                        }
                    },
                    {
                        "name": "bill_file",
                        "in": "query",
                        "description": "Base64 encoded full path phone bill files (scan, photo). Supported file types: GIF, JPG, PNG, or PDF. Size up to 5MB.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "base64"
                        }
                    },
                    {
                        "name": "bill_filename",
                        "in": "query",
                        "description": "Base64 encoded phone bill file name.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "LNP request status. Values: draft, submitted. Default is submitted.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "submitted",
                            "enum": [
                                "draft",
                                "submitted"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "LNP request created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "description": "The unique ID assigned to the LNP request.",
                                                        "example": "12345"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Warning: Non-critical error occurred while processing the request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "warning": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "Warning message"
                                            }
                                        }
                                    },
                                    "example": {
                                        "warning": [
                                            "Warning Message"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error occurred while creating the LNP request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    },
                                    "example": {
                                        "error": "Error Message"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Local Number Portability"
                ],
                "summary": "List Active Local Number Portability Requests",
                "description": "Retrieve a list of active Local Number Portability (LNP) requests based on specified parameters.",
                "parameters": [
                    {
                        "name": "number2port",
                        "in": "query",
                        "description": "Porting numbers to list. Supports Unix-style searching. Examples: *890, 123*, *456*. Minimum three digits required for search.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "LNP order ID(s). You can provide a single ID or an array of IDs.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of records to show per page. Values range from 1 to 200. Default is 10.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "minimum": 1,
                            "maximum": 200
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number to show.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of active LNP requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of LNP requests."
                                        },
                                        "total_pages": {
                                            "type": "integer",
                                            "description": "Total number of pages."
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "description": "Current page number."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "number2port": {
                                                        "type": "string",
                                                        "description": "Telephone number being ported."
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "description": "Unique identifier for the LNP request."
                                                    },
                                                    "created_by": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "description": "Timestamp when the request was created."
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "description": "Status of the LNP request."
                                                    },
                                                    "foc_date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "description": "Requested FOC date."
                                                    },
                                                    "did_mode": {
                                                        "type": "string",
                                                        "description": "Type of DID."
                                                    },
                                                    "trunk": {
                                                        "type": "string",
                                                        "description": "SIP trunk name for routing."
                                                    },
                                                    "partial_port": {
                                                        "type": "string",
                                                        "description": "Partial port status."
                                                    },
                                                    "location": {
                                                        "type": "string",
                                                        "description": "Service location."
                                                    },
                                                    "company": {
                                                        "type": "string",
                                                        "description": "Company name."
                                                    },
                                                    "wireless_no": {
                                                        "type": "string",
                                                        "description": "Wireless number type."
                                                    },
                                                    "lidb_list": {
                                                        "type": "string",
                                                        "description": "LIDB/Directory Listings status."
                                                    },
                                                    "provider_name": {
                                                        "type": "string",
                                                        "description": "Current service provider name."
                                                    },
                                                    "account_no": {
                                                        "type": "string",
                                                        "description": "Service provider account number."
                                                    },
                                                    "authorize_contact": {
                                                        "type": "string",
                                                        "description": "Authorized contact person."
                                                    },
                                                    "contact_title": {
                                                        "type": "string",
                                                        "description": "Title of the contact person."
                                                    },
                                                    "street_no": {
                                                        "type": "string",
                                                        "description": "Street number."
                                                    },
                                                    "dir_prefix": {
                                                        "type": "string",
                                                        "description": "DIR prefix."
                                                    },
                                                    "street_name": {
                                                        "type": "string",
                                                        "description": "Street name."
                                                    },
                                                    "dir_suffix": {
                                                        "type": "string",
                                                        "description": "DIR suffix."
                                                    },
                                                    "service_unit": {
                                                        "type": "string",
                                                        "description": "Service suite/unit."
                                                    },
                                                    "city": {
                                                        "type": "string",
                                                        "description": "City."
                                                    },
                                                    "zipcode": {
                                                        "type": "string",
                                                        "description": "Zip code."
                                                    },
                                                    "billing_telephone_no": {
                                                        "type": "string",
                                                        "description": "Billing telephone number."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Local Number Portability"
                ],
                "summary": "Update an existing Local Number Portability Request",
                "description": "Update the details of an existing Local Number Portability (LNP) request. Only the parameters provided in the request will be updated.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The unique identifier of the LNP request to update.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "foc_date",
                        "in": "query",
                        "description": "Requested FOC date in the format YYYY-MM-DD. Not available for mobile DIDs.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "activate_time",
                        "in": "query",
                        "description": "Requested FOC activation time in the format HH:00 (EST).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "time"
                        }
                    },
                    {
                        "name": "trunk",
                        "in": "query",
                        "description": "SIP trunk name to route DID on completion. Valid for voice DIDs only. Set to an empty value to unset the trunk.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partial_port",
                        "in": "query",
                        "description": "Partial port status. Values: yes or no. Default is no.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "yes",
                                "no"
                            ],
                            "default": "no"
                        }
                    },
                    {
                        "name": "extra_services",
                        "in": "query",
                        "description": "Additional remaining services. Required if partial_port is set to yes.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "Service location. Values: business, residential. Default is business.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "business",
                                "residential"
                            ],
                            "default": "business"
                        }
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "description": "Company name. Required if location is set to business.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "wireless_no",
                        "in": "query",
                        "description": "Wireless number type. Values: no, yes. Default is no.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "no",
                                "yes"
                            ],
                            "default": "no"
                        }
                    },
                    {
                        "name": "pincode",
                        "in": "query",
                        "description": "Wireless account PIN code. Required if wireless_no is set to yes.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ssn",
                        "in": "query",
                        "description": "SSN last four digits. Required if wireless_no is set to yes.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "lidb_list",
                        "in": "query",
                        "description": "LIDB/Directory Listings. Values: no, yes. Default is no.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "no",
                                "yes"
                            ],
                            "default": "no"
                        }
                    },
                    {
                        "name": "provider_name",
                        "in": "query",
                        "description": "Current service provider name (max 255 chars).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "account_no",
                        "in": "query",
                        "description": "Service provider account number.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "authorize_contact",
                        "in": "query",
                        "description": "Authorized contact person (max 25 chars).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 25
                        }
                    },
                    {
                        "name": "contact_title",
                        "in": "query",
                        "description": "Contact title. Example: Employee, President, CEO (max 50 chars).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 50
                        }
                    },
                    {
                        "name": "street_no",
                        "in": "query",
                        "description": "Service street number (max 50 chars).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 50
                        }
                    },
                    {
                        "name": "dir_prefix",
                        "in": "query",
                        "description": "DIR prefix. Examples: None, N, NE, E, SE, S, SW, W, NW (max 10 chars).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 10
                        }
                    },
                    {
                        "name": "street_name",
                        "in": "query",
                        "description": "Street name (max 100 chars).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 100
                        }
                    },
                    {
                        "name": "dir_suffix",
                        "in": "query",
                        "description": "DIR suffix. Example: None, N, NE, E, SE, S, SW, W, NW (max 10 chars).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 10
                        }
                    },
                    {
                        "name": "service_unit",
                        "in": "query",
                        "description": "Service suite/unit (max 100 chars).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 100
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "Service city (max 100 chars).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 100
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Service state.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "zipcode",
                        "in": "query",
                        "description": "Service zip code (max 20 chars).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 20
                        }
                    },
                    {
                        "name": "billing_telephone_no",
                        "in": "query",
                        "description": "US-based billing telephone number (10 chars).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 10
                        }
                    },
                    {
                        "name": "port_out_pin",
                        "in": "query",
                        "description": "Current carrier porting out PIN code (4-10 chars).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 4,
                            "maxLength": 10
                        }
                    },
                    {
                        "name": "bill_file",
                        "in": "query",
                        "description": "Base64 encoded phone bill file (scan, photo). Supported file types: GIF, JPG, PNG, PDF. Size up to 5MB.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bill_filename",
                        "in": "query",
                        "description": "Base64 encoded phone bill file name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "LNP request status. Allowed if the request is currently in Draft or Submitted status. Values: draft, submitted (default).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "draft",
                                "submitted"
                            ],
                            "default": "submitted"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty"
                    },
                    "202": {
                        "description": "Update successful but with non-critical warnings.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "warning": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error occurred during the update.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Local Number Portability"
                ],
                "summary": "Remove Active Local Number Portability Request",
                "description": "Delete an active (non-completed) Local Number Portability (LNP) request using its unique identifier.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The unique identifier of the LNP request to delete.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty"
                    },
                    "202": {
                        "description": "Delete successful but with non-critical warnings.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "warning": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error occurred during the deletion process.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/server": {
            "post": {
                "tags": [
                    "VoIP Servers"
                ],
                "summary": "Order a Virtual or Dedicated Server",
                "description": "Order a regular or QuBe server with specified parameters.",
                "parameters": [
                    {
                        "name": "server_type",
                        "in": "query",
                        "description": "Type of server to order. Available values: small, medium, large, enterprise, enterpriseplusplus. Obsolete values (no longer used): dedicated, qubededicated, qubevirtual.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "small",
                                "medium",
                                "large",
                                "enterprise",
                                "enterpriseplusplus"
                            ]
                        }
                    },
                    {
                        "name": "params",
                        "in": "body",
                        "description": "Array of server software and parameters.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "qube": {
                                    "type": "object",
                                    "properties": {
                                        "password": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "inbound_trunk_name": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "qubev2": {
                                    "type": "object",
                                    "properties": {
                                        "password": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "domain_name": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "vodia": {
                                    "type": "object",
                                    "properties": {
                                        "password": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "company": {
                                            "type": "string"
                                        },
                                        "did": {
                                            "type": "string"
                                        },
                                        "inbound_trunk_name": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "vital-pbx": {
                                    "type": "object",
                                    "properties": {
                                        "email": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "sbc": {
                                    "type": "object",
                                    "properties": {
                                        "sbcuser_password": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "inbound_trunk_name": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "qube-tdr": {
                                    "type": "object",
                                    "properties": {
                                        "password": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "domain_name": {
                                            "type": "string"
                                        },
                                        "inbound_trunk_name": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "3cx": {
                                    "type": "object",
                                    "properties": {
                                        "admin_password": {
                                            "type": "string"
                                        },
                                        "admin_email": {
                                            "type": "string"
                                        },
                                        "license_key": {
                                            "type": "string"
                                        },
                                        "license_contact_name": {
                                            "type": "string"
                                        },
                                        "license_company_name": {
                                            "type": "string"
                                        },
                                        "license_email": {
                                            "type": "string"
                                        },
                                        "license_phone": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "inbound_trunk_name": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "masstext": {
                                    "type": "object",
                                    "properties": {
                                        "domain_name": {
                                            "type": "string"
                                        },
                                        "username": {
                                            "type": "string"
                                        },
                                        "password": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "inbound_trunk_name": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "note": {
                                    "type": "string",
                                    "description": "Optional note or comment, up to 255 characters."
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Server successfully ordered.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "server_id": {
                                                    "type": "integer",
                                                    "example": 10522
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "VoIP Servers"
                ],
                "summary": "List Inventory and Properties of Ordered Servers",
                "description": "Retrieve the list of servers ordered along with their inventory and properties.",
                "parameters": [
                    {
                        "name": "server_id",
                        "in": "query",
                        "description": "Server ID to show. Can be a single integer or an array of IDs.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of server list.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of servers in the response."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "server_id": {
                                                        "type": "integer",
                                                        "description": "Unique ID of the server."
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "description": "Type of server (e.g., small, medium, large)."
                                                    },
                                                    "ordered_by": {
                                                        "type": "string",
                                                        "description": "Date the server was ordered (YYYY-MM-DD format)."
                                                    },
                                                    "allowed_ip": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "description": "List of IP addresses allowed for the server."
                                                        }
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "description": "Current status of the server (e.g., active, inactive)."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "VoIP Servers"
                ],
                "summary": "Remove Server from Account",
                "description": "Removes a server from the user's account based on the specified server ID.",
                "parameters": [
                    {
                        "name": "server_id",
                        "in": "query",
                        "description": "The ID of the server to be removed.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Server successfully removed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Empty response on success."
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error occurred during server removal.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/server/addip": {
            "put": {
                "tags": [
                    "VoIP Servers"
                ],
                "summary": "Add an IP Address to Allowed List",
                "description": "Adds an IP address to the list of allowed IPs for a specified server.",
                "parameters": [
                    {
                        "name": "server_id",
                        "in": "query",
                        "description": "The ID of the server to which the IP address will be added.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ip_address",
                        "in": "query",
                        "description": "The IP address to add to the allowed list.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "note",
                        "in": "query",
                        "description": "Optional note or comment (up to 64 characters).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 64
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty"
                    },
                    "202": {
                        "description": "Warning or non-critical error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "warning": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "Warning message(s)."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error occurred during IP address addition.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/server/deleip": {
            "delete": {
                "tags": [
                    "VoIP Servers"
                ],
                "summary": "Remove an IP Address from Allowed List",
                "description": "Removes an IP address from the list of allowed IPs for a specified server.",
                "parameters": [
                    {
                        "name": "server_id",
                        "in": "query",
                        "description": "The ID of the server from which the IP address will be removed.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty"
                    },
                    "206": {
                        "description": "Error occurred during IP address removal.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/server/upgrade": {
            "post": {
                "tags": [
                    "VoIP Servers"
                ],
                "summary": "Upgrade Server Configuration",
                "description": "Upgrade the configuration of an existing server to a higher configuration.",
                "parameters": [
                    {
                        "name": "server_id",
                        "in": "query",
                        "description": "The ID of the server to upgrade.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "server_type",
                        "in": "query",
                        "description": "The new server type to set. Allowed values: medium, large, enterprise, enterpriseplusplus. The new server type must be a higher configuration than the current one.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "medium",
                                "large",
                                "enterprise",
                                "enterpriseplusplus"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty"
                    },
                    "206": {
                        "description": "Error occurred during server upgrade.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/server/managebackupschedule": {
            "post": {
                "tags": [
                    "VoIP Servers"
                ],
                "summary": "Manage Server Backup Schedule",
                "description": "Set or manage the backup schedule for a server, including enrolling or unenrolling from the backup service.",
                "parameters": [
                    {
                        "name": "server_id",
                        "in": "query",
                        "description": "The ID of the server for which the backup schedule is to be managed.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "schedule",
                        "in": "query",
                        "description": "The desired backup schedule. Available values: daily, weekly, monthly, none (to unenroll from backup service).",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "daily",
                                "weekly",
                                "monthly",
                                "none"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty"
                    },
                    "206": {
                        "description": "Error occurred while managing the backup schedule.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/server/listbackups": {
            "get": {
                "tags": [
                    "VoIP Servers"
                ],
                "summary": "List Available Backups",
                "description": "Retrieve a list of available backups for a specified server.",
                "parameters": [
                    {
                        "name": "server_id",
                        "in": "query",
                        "description": "The ID of the server for which backups are to be listed.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of available backups.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of backups available."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "backup_id": {
                                                        "type": "integer",
                                                        "description": "The unique identifier of the backup."
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "description": "The name or timestamp of the backup."
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "description": "The type of backup (e.g., manual)."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/server/restorebackup": {
            "post": {
                "tags": [
                    "VoIP Servers"
                ],
                "summary": "Restore Server Backup",
                "description": "Restore the server from a specified backup.",
                "parameters": [
                    {
                        "name": "server_id",
                        "in": "query",
                        "description": "The ID of the server to restore the backup to.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "backup_id",
                        "in": "query",
                        "description": "The ID of the backup to restore from.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The backup was successfully restored.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Confirmation message indicating successful restoration."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error occurred during backup restoration.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error that occurred."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/server/removebackup": {
            "delete": {
                "tags": [
                    "VoIP Servers"
                ],
                "summary": "Remove Server Backup",
                "description": "Remove a specified backup from the server.",
                "parameters": [
                    {
                        "name": "server_id",
                        "in": "query",
                        "description": "The ID of the server from which the backup should be removed.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "backup_id",
                        "in": "query",
                        "description": "The ID of the backup to remove.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The backup was successfully removed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Confirmation message indicating successful removal."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Error occurred during backup removal.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error that occurred."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "webhooks": {
        "inboundMessageCallback": {
            "post": {
                "tags": [
                    "SMS Service"
                ],
                "summary": "Inbound Message Callback",
                "description": "Inbound messages callback sent to your endpoint",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "from": {
                                        "type": "string",
                                        "description": "Number that sent the message"
                                    },
                                    "to": {
                                        "type": "array",
                                        "description": "Array of numbers the message was sent to",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "text": {
                                        "type": "string",
                                        "description": "The text that was sent"
                                    },
                                    "media": {
                                        "type": "array",
                                        "description": "Array of media urls",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "segments": {
                                        "type": "string",
                                        "description": "The amount of segments the message was split into"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "The type of message",
                                        "enum": [
                                            "SMS",
                                            "MMS"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Return a 200 status to indicate that the data was received successfully"
                    }
                }
            }
        },
        "statusMessageCallback": {
            "post": {
                "tags": [
                    "SMS Service"
                ],
                "summary": "Status Message Callback",
                "description": "We will send a status callback for outbound message delivery to your endpoint. Note that for group messages you will receieve a status callback for each individual number.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "from": {
                                        "type": "string",
                                        "description": "Number that sent the message"
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "Number the message was sent to"
                                    },
                                    "status": {
                                        "type": "string",
                                        "description": "Status of the message delivery"
                                    },
                                    "reason": {
                                        "type": "string",
                                        "description": "If message fails to deliver, a reason will be provided"
                                    },
                                    "segments": {
                                        "type": "string",
                                        "description": "The amount of segments the message was split into"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Return a 200 status to indicate that the data was received successfully"
                    }
                }
            }
        }
    }
}